{"version":3,"file":"sim-a9ecb615.chunk.js","sources":["../../../ui/balance_druid/inputs.ts","../../../ui/balance_druid/presets.ts","../../../ui/balance_druid/sim.ts"],"sourcesContent":["import { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfInnervate = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecBalanceDruid>({\n\tfieldName: 'innervateTarget',\n\tid: ActionId.fromSpellId(29166),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecBalanceDruid>) => player.getSpecOptions().innervateTarget?.type == UnitType.Player,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecBalanceDruid>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.innervateTarget = UnitReference.create({\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\n\t\t\tindex: 0,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const OkfUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecBalanceDruid>({\n\tfieldName: 'okfUptime',\n\tlabel: 'Owlkin Frenzy Uptime (%)',\n\tlabelTooltip: 'Percentage of fight uptime for Owlkin Frenzy',\n\tpercent: true,\n});\n","import {\n\tConsumes,\n\tDebuffs,\n\tExplosive,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tPotions,\n\tRaidBuffs,\n\tUnitReference,\n\tTristateEffect,\n\tFaction,\n\tProfession,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tBalanceDruid_Options as BalanceDruidOptions,\n\tDruidMajorGlyph,\n\tDruidMinorGlyph,\n} from '../core/proto/druid.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Pre-raid Preset', PreraidGear);\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nimport P3AllianceGear from './gear_sets/p3_alliance.gear.json';\nexport const P3_PRESET_ALLI = PresetUtils.makePresetGear('P3 Preset [A]', P3AllianceGear, { faction: Faction.Alliance });\nimport P3HordeGear from './gear_sets/p3_horde.gear.json';\nexport const P3_PRESET_HORDE = PresetUtils.makePresetGear('P3 Preset [H]', P3HordeGear, { faction: Faction.Horde });\nimport P4AllianceGear from './gear_sets/p4_alliance.gear.json';\nexport const P4_PRESET_ALLI = PresetUtils.makePresetGear('P4 Preset [A]', P4AllianceGear, { faction: Faction.Alliance });\nimport P4HordeGear from './gear_sets/p4_horde.gear.json';\nexport const P4_PRESET_HORDE = PresetUtils.makePresetGear('P4 Preset [H]', P4HordeGear, { faction: Faction.Horde });\n\nimport BasicP3AplJson from './apls/basic_p3.apl.json';\nexport const ROTATION_PRESET_P3_APL = PresetUtils.makePresetAPLRotation('P3', BasicP3AplJson);\nimport P4FocusAplJson from './apls/p4_focus_glyph.apl.json';\nexport const ROTATION_PRESET_P4_FOCUS_APL = PresetUtils.makePresetAPLRotation('P4 Focus Glyph', P4FocusAplJson);\nimport P4StarfireAplJson from './apls/p4_starfire_glyph.apl.json';\nexport const ROTATION_PRESET_P4_STARFIRE_APL = PresetUtils.makePresetAPLRotation('P4 Starfire Glyph', P4StarfireAplJson);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const Phase1Talents = {\n\tname: 'Phase 1',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5032003115331303213305311231--205003012',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfFocus,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t}),\n\t}),\n};\n\nexport const Phase2Talents = {\n\tname: 'Phase 2',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5012203115331303213305311231--205003012',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfStarfire,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t}),\n\t}),\n};\n\nexport const Phase3Talents = {\n\tname: 'Phase 3',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5102223115331303213305311031--205003012',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfStarfire,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfMoonfire,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t}),\n\t}),\n};\n\nexport const Phase4Talents = {\n\tname: 'Phase 4',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5102223115331303213305311031--205003012',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfFocus,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfInsectSwarm,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfStarfall,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfTyphoon,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = BalanceDruidOptions.create({\n\tinnervateTarget: UnitReference.create(),\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tprepopPotion: Potions.PotionOfWildMagic,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tsanctifiedRetribution: true,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n\tdemonicPactSp: 500,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DefaultPartyBuffs = PartyBuffs.create({\n\theroicPresence: false,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n\tshadowMastery: true,\n\tsunderArmor: true,\n\ttotemOfWrath: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 18,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n\tnibelungAverageCasts: 11,\n};\n","import {\n\tClass,\n\tFaction,\n\tRace,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as DruidInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecBalanceDruid, {\n\tcssClass: 'balance-druid-sim-ui',\n\tcssScheme: 'druid',\n\t// List any known bugs / issues here, and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_PRESET_HORDE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.43,\n\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.82,\n\t\t\t[Stat.StatSpellHaste]: 0.80,\n\t\t\t[Stat.StatMP5]: 0.00,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.Phase3Talents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: Presets.DefaultPartyBuffs,\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tDruidInputs.SelfInnervate,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.MeleeHasteBuff,\n\t\tBuffDebuffInputs.MeleeCritBuff,\n\t\tBuffDebuffInputs.AttackPowerPercentBuff,\n\t\tBuffDebuffInputs.AttackPowerBuff,\n\t\tBuffDebuffInputs.MajorArmorDebuff,\n\t\tBuffDebuffInputs.MinorArmorDebuff,\n\t\tBuffDebuffInputs.PhysicalDamageDebuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tDruidInputs.OkfUptime,\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.ReactionTime,\n\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\tOtherInputs.nibelungAverageCasts,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.Phase1Talents,\n\t\t\tPresets.Phase2Talents,\n\t\t\tPresets.Phase3Talents,\n\t\t\tPresets.Phase4Talents,\n\t\t],\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_P3_APL,\n\t\t\tPresets.ROTATION_PRESET_P4_FOCUS_APL,\n\t\t\tPresets.ROTATION_PRESET_P4_STARFIRE_APL,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET_HORDE,\n\t\t\tPresets.P3_PRESET_ALLI,\n\t\t\tPresets.P4_PRESET_HORDE,\n\t\t\tPresets.P4_PRESET_ALLI,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecBalanceDruid>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_P3_APL.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecBalanceDruid,\n\t\t\ttooltip: specNames[Spec.SpecBalanceDruid],\n\t\t\tdefaultName: 'Balance',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDruid, 0),\n\n\t\t\ttalents: Presets.Phase2Talents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_ALLI.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_ALLI.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_HORDE.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class BalanceDruidSimUI extends IndividualSimUI<Spec.SpecBalanceDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecBalanceDruid>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["SelfInnervate","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","innervateTarget","type","UnitType","Player","setValue","eventID","newValue","newOptions","UnitReference","create","Unknown","index","setSpecOptions","OkfUptime","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","percent","PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET_ALLI","P3AllianceGear","faction","Faction","Alliance","P3_PRESET_HORDE","P3HordeGear","Horde","P4_PRESET_ALLI","P4AllianceGear","P4_PRESET_HORDE","P4HordeGear","ROTATION_PRESET_P3_APL","PresetUtils.makePresetAPLRotation","BasicP3AplJson","ROTATION_PRESET_P4_FOCUS_APL","P4FocusAplJson","ROTATION_PRESET_P4_STARFIRE_APL","P4StarfireAplJson","Phase1Talents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","DruidMajorGlyph","GlyphOfFocus","major2","GlyphOfInsectSwarm","major3","GlyphOfStarfall","minor1","DruidMinorGlyph","GlyphOfTyphoon","minor2","GlyphOfUnburdenedRebirth","minor3","GlyphOfTheWild","Phase2Talents","GlyphOfStarfire","Phase3Talents","GlyphOfMoonfire","Phase4Talents","DefaultOptions","BalanceDruidOptions","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","prepopPotion","PotionOfWildMagic","fillerExplosive","Explosive","ExplosiveSaroniteBomb","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","icyTalons","moonkinAura","leaderOfThePack","powerWordFortitude","sanctifiedRetribution","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","demonicPactSp","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfWisdom","vampiricTouch","DefaultPartyBuffs","PartyBuffs","heroicPresence","DefaultDebuffs","Debuffs","bloodFrenzy","ebonPlaguebringer","faerieFire","heartOfTheCrusader","judgementOfWisdom","shadowMastery","sunderArmor","totemOfWrath","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","nibelungAverageCasts","SPEC_CONFIG","registerSpecConfig","Spec","SpecBalanceDruid","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","gear","Presets.P3_PRESET_HORDE","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.Phase3Talents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","Presets.DefaultPartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","DruidInputs.SelfInnervate","includeBuffDebuffInputs","BuffDebuffInputs.MeleeHasteBuff","BuffDebuffInputs.MeleeCritBuff","BuffDebuffInputs.AttackPowerPercentBuff","BuffDebuffInputs.AttackPowerBuff","BuffDebuffInputs.MajorArmorDebuff","BuffDebuffInputs.MinorArmorDebuff","BuffDebuffInputs.PhysicalDamageDebuff","excludeBuffDebuffInputs","otherInputs","inputs","DruidInputs.OkfUptime","OtherInputs.TankAssignment","OtherInputs.ReactionTime","OtherInputs.DistanceFromTarget","OtherInputs.nibelungAverageCasts","encounterPicker","showExecuteProportion","presets","Presets.Phase1Talents","Presets.Phase2Talents","Presets.Phase4Talents","rotations","Presets.ROTATION_PRESET_P3_APL","Presets.ROTATION_PRESET_P4_FOCUS_APL","Presets.ROTATION_PRESET_P4_STARFIRE_APL","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P3_PRESET_ALLI","Presets.P4_PRESET_HORDE","Presets.P4_PRESET_ALLI","autoRotation","_player","rotation","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassDruid","otherDefaults","defaultFactionRaces","Race","RaceUnknown","RaceNightElf","RaceTauren","defaultGear","BalanceDruidSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}