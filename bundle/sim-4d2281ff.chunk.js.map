{"version":3,"file":"sim-4d2281ff.chunk.js","sources":["../../../ui/feral_tank_druid/inputs.ts","../../../ui/feral_tank_druid/presets.ts","../../../ui/feral_tank_druid/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const StartingRage = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecFeralTankDruid>({\n\tfieldName: 'startingRage',\n\tlabel: 'Starting Rage',\n\tlabelTooltip: 'Initial rage at the start of each iteration.',\n});\n\nexport const FeralTankDruidRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecFeralTankDruid>({\n\t\t\tfieldName: 'maulRageThreshold',\n\t\t\tlabel: 'Maul Rage Threshold',\n\t\t\tlabelTooltip: 'Queue Maul when Rage is above this value.',\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecFeralTankDruid>({\n\t\t\tfieldName: 'lacerateTime',\n\t\t\tlabel: 'Lacerate Refresh Leeway',\n\t\t\tlabelTooltip: 'Refresh Lacerate when remaining duration is less than this value (in seconds).',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecFeralTankDruid>({\n\t\t\tfieldName: 'maintainDemoralizingRoar',\n\t\t\tlabel: 'Maintain Demo Roar',\n\t\t\tlabelTooltip: 'Keep Demoralizing Roar active on the primary target. If a stronger debuff is active, will not cast.',\n\t\t}),\n\t],\n};\n","import {\n\tBattleElixir,\n\tConjured,\n\tConsumes,\n\tExplosive,\n\tFood,\n\tGlyphs,\n\tGuardianElixir,\n\tPotions,\n\tSpec,\n\tUnitReference,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tFeralTankDruid_Rotation as DruidRotation,\n\tFeralTankDruid_Options as DruidOptions,\n\tDruidMajorGlyph,\n\tDruidMinorGlyph,\n} from '../core/proto/druid.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2', P2Gear);\nimport P3Gear from './gear_sets/p3.gear.json';\nexport const P3_PRESET = PresetUtils.makePresetGear('P3', P3Gear);\nimport P4Gear from './gear_sets/p4.gear.json';\nexport const P4_PRESET = PresetUtils.makePresetGear('P4', P4Gear);\n\nexport const DefaultSimpleRotation = DruidRotation.create({\n\tmaulRageThreshold: 25,\n\tmaintainDemoralizingRoar: true,\n\tlacerateTime: 8.0,\n});\n\nimport DefaultApl from './apls/default.apl.json';\nexport const ROTATION_DEFAULT = PresetUtils.makePresetAPLRotation('APL Default', DefaultApl);\n\nexport const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Default', Spec.SpecFeralTankDruid, DefaultSimpleRotation);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-503232132322010353120300313511-20350001',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfMaul,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfSurvivalInstincts,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfFrenziedRegeneration,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfChallengingRoar,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfThorns,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = DruidOptions.create({\n\tinnervateTarget: UnitReference.create(),\n\tstartingRage: 20,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tbattleElixir: BattleElixir.GurusElixir,\n\tguardianElixir: GuardianElixir.GiftOfArthas,\n\tfood: Food.FoodBlackenedDragonfin,\n\tprepopPotion: Potions.IndestructiblePotion,\n\tdefaultPotion: Potions.IndestructiblePotion,\n\tdefaultConjured: Conjured.ConjuredHealthstone,\n\tthermalSapper: true,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n","import {\n\tClass,\n\tCooldowns,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLAction,\n\tAPLListItem,\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { TankGemOptimizer } from '../core/components/suggest_gems_action.js';\n\nimport {\n\tFeralTankDruid_Rotation as DruidRotation,\n} from '../core/proto/druid.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as AplUtils from '../core/proto_utils/apl_utils.js';\n\nimport * as DruidInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecFeralTankDruid, {\n\tcssClass: 'feral-tank-druid-sim-ui',\n\tcssScheme: 'druid',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatDefense,\n\t\tStat.StatDodge,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\tepPseudoStats: [\n\t\tPseudoStat.PseudoStatMainHandDps,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatDefense,\n\t\tStat.StatDodge,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatArmor]: 3.5665,\n\t\t\t[Stat.StatBonusArmor]: 0.5187,\n\t\t\t[Stat.StatStamina]: 7.3021,\n\t\t\t[Stat.StatStrength]: 2.3786,\n\t\t\t[Stat.StatAgility]: 4.4974,\n\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t[Stat.StatExpertise]: 2.6597,\n\t\t\t[Stat.StatMeleeHit]: 2.9282,\n\t\t\t[Stat.StatMeleeCrit]: 1.5143,\n\t\t\t[Stat.StatMeleeHaste]: 2.0983,\n\t\t\t[Stat.StatArmorPenetration]: 1.584,\n\t\t\t[Stat.StatDefense]: 1.8171,\n\t\t\t[Stat.StatDodge]: 2.0196,\n\t\t\t[Stat.StatHealth]: 0.4465,\n\t\t}, {\n\t\t\t[PseudoStat.PseudoStatMainHandDps]: 0.0,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\tshadowProtection: true,\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\tbloodlust: true,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\tbattleShout: TristateEffect.TristateEffectImproved,\n\t\t\tunleashedRage: true,\n\t\t\twindfuryTotem: TristateEffect.TristateEffectImproved,\n\t\t\tarcaneEmpowerment: true,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\theroicPresence: true,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\trenewedHope: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tsavageCombat: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\texposeArmor: true,\n\t\t\tfrostFever: TristateEffect.TristateEffectImproved,\n\t\t\tmasterPoisoner: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tshadowMastery: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t],\n\t// Inputs to include in the 'Rotation' section on the settings tab.\n\trotationInputs: DruidInputs.FeralTankDruidRotationConfig,\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.HealthBuff,\n\t\tBuffDebuffInputs.SpellCritBuff,\n\t\tBuffDebuffInputs.SpellCritDebuff,\n\t\tBuffDebuffInputs.SpellHitDebuff,\n\t\tBuffDebuffInputs.SpellDamageDebuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tDruidInputs.StartingRage,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_SIMPLE,\n\t\t\tPresets.ROTATION_DEFAULT,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecFeralTankDruid>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_SIMPLE.rotation.rotation!;\n\t},\n\n\tsimpleRotation: (player: Player<Spec.SpecFeralTankDruid>, simple: DruidRotation, cooldowns: Cooldowns): APLRotation => {\n\t\tlet [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\tconst emergencyLacerate = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"sourceUnit\":{\"type\":\"CurrentTarget\"},\"auraId\":{\"spellId\":48568}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":48568}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":48568}}}`);\n\t\tconst demoRoar = APLAction.fromJsonString(`{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":48560},\"maxOverlap\":{\"const\":{\"val\":\"1.5s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48560}}}`);\n\t\tconst mangle = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48564}}}`);\n\t\tconst delayFaerieFireForMangle = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48564}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48564}}},\"rhs\":{\"const\":{\"val\":\"1.0s\"}}}}]}},\"wait\":{\"duration\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48564}}}}}`);\n\t\tconst faerieFire = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":16857}}}`);\n\t\tconst delayFillersForMangle = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48564}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48564}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}},\"wait\":{\"duration\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48564}}}}}`);\n\t\tconst lacerate = APLAction.fromJsonString(`{\"condition\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraNumStacks\":{\"sourceUnit\":{\"type\":\"CurrentTarget\"},\"auraId\":{\"spellId\":48568}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":48568}}},\"rhs\":{\"const\":{\"val\":\"${simple.lacerateTime.toFixed(1)}s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":48568}}}`);\n\t\tconst swipe = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRage\":{}},\"rhs\":{\"const\":{\"val\":\"${(simple.maulRageThreshold + 15).toFixed(0)}\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48562}}}`);\n\t\tconst queueMaul = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRage\":{}},\"rhs\":{\"const\":{\"val\":\"${simple.maulRageThreshold.toFixed(0)}\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48480,\"tag\":1}}}`);\n\t\tconst waitForFaerieFire = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":16857}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":16857}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}},\"wait\":{\"duration\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":16857}}}}}`);\n\n\t\tactions.push(...[\n\t\t\temergencyLacerate,\n\t\t\tsimple.maintainDemoralizingRoar ? demoRoar : null,\n\t\t\tmangle,\n\t\t\tdelayFaerieFireForMangle,\n\t\t\tfaerieFire,\n\t\t\tdelayFillersForMangle,\n\t\t\tlacerate,\n\t\t\tswipe,\n\t\t\tqueueMaul,\n\t\t\twaitForFaerieFire,\n\t\t].filter(a => a) as Array<APLAction>)\n\n\t\treturn APLRotation.create({\n\t\t\tprepullActions: prepullActions,\n\t\t\tpriorityList: actions.map(action => APLListItem.create({\n\t\t\t\taction: action,\n\t\t\t}))\n\t\t});\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecFeralTankDruid,\n\t\t\ttooltip: specNames[Spec.SpecFeralTankDruid],\n\t\t\tdefaultName: 'Bear',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDruid, 1),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class FeralTankDruidSimUI extends IndividualSimUI<Spec.SpecFeralTankDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecFeralTankDruid>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t\tconst _gemOptimizer = new TankGemOptimizer(this);\n\t}\n}\n"],"names":["StartingRage","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","FeralTankDruidRotationConfig","inputs","InputHelpers.makeRotationNumberInput","InputHelpers.makeRotationBooleanInput","P1_PRESET","PresetUtils.makePresetGear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","DefaultSimpleRotation","DruidRotation","create","maulRageThreshold","maintainDemoralizingRoar","lacerateTime","ROTATION_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","ROTATION_PRESET_SIMPLE","PresetUtils.makePresetSimpleRotation","Spec","SpecFeralTankDruid","StandardTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","DruidMajorGlyph","GlyphOfMaul","major2","GlyphOfSurvivalInstincts","major3","GlyphOfFrenziedRegeneration","minor1","DruidMinorGlyph","GlyphOfChallengingRoar","minor2","GlyphOfThorns","minor3","GlyphOfUnburdenedRebirth","DefaultOptions","DruidOptions","innervateTarget","UnitReference","startingRage","DefaultConsumes","Consumes","battleElixir","BattleElixir","GurusElixir","guardianElixir","GuardianElixir","GiftOfArthas","food","Food","FoodBlackenedDragonfin","prepopPotion","Potions","IndestructiblePotion","defaultPotion","defaultConjured","Conjured","ConjuredHealthstone","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","SPEC_CONFIG","registerSpecConfig","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmor","StatBonusArmor","StatArmorPenetration","StatDefense","StatDodge","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","StatSpellHit","StatSpellCrit","defaults","gear","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","powerWordFortitude","TristateEffect","TristateEffectImproved","shadowProtection","giftOfTheWild","thorns","bloodlust","strengthOfEarthTotem","battleShout","unleashedRage","windfuryTotem","arcaneEmpowerment","moonkinAura","partyBuffs","PartyBuffs","heroicPresence","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","renewedHope","debuffs","Debuffs","savageCombat","faerieFire","exposeArmor","frostFever","masterPoisoner","ebonPlaguebringer","shadowMastery","playerIconInputs","rotationInputs","DruidInputs.FeralTankDruidRotationConfig","includeBuffDebuffInputs","BuffDebuffInputs.HealthBuff","BuffDebuffInputs.SpellCritBuff","BuffDebuffInputs.SpellCritDebuff","BuffDebuffInputs.SpellHitDebuff","BuffDebuffInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.InspirationUptime","OtherInputs.HpPercentForDefensives","DruidInputs.StartingRage","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_SIMPLE","Presets.ROTATION_DEFAULT","Presets.P2_PRESET","Presets.P3_PRESET","Presets.P4_PRESET","autoRotation","_player","rotation","simpleRotation","player","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","emergencyLacerate","APLAction","fromJsonString","demoRoar","mangle","delayFaerieFireForMangle","delayFillersForMangle","lacerate","toFixed","swipe","queueMaul","waitForFaerieFire","push","filter","a","APLRotation","priorityList","map","action","APLListItem","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassDruid","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceNightElf","Horde","RaceTauren","defaultGear","FeralTankDruidSimUI","IndividualSimUI","constructor","parentElem","super","TankGemOptimizer","this"],"mappings":"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"}