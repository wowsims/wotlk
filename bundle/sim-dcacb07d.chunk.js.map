{"version":3,"file":"sim-dcacb07d.chunk.js","sources":["../../../ui/deathknight/inputs.ts","../../../ui/deathknight/presets.ts","../../../ui/deathknight/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\n\nimport {\n\tDeathknightMajorGlyph,\n} from '../core/proto/deathknight.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\nimport { Player } from '../core/player';\nimport { EventID, TypedEvent } from '../core/typed_event';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfUnholyFrenzy = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\n\tfieldName: 'unholyFrenzyTarget',\n\tlabel: 'Self Unholy Frenzy',\n\tlabelTooltip: 'Cast Unholy Frenzy on yourself.',\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecDeathknight>) => player.getSpecOptions().unholyFrenzyTarget?.type == UnitType.Player,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecDeathknight>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.unholyFrenzyTarget = UnitReference.create({\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\n\t\t\tindex: 0,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().hysteria,\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const StartingRunicPower = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\n\tfieldName: 'startingRunicPower',\n\tlabel: 'Starting Runic Power',\n\tlabelTooltip: 'Initial RP at the start of each iteration.',\n});\n\nexport const PetUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\n\tfieldName: 'petUptime',\n\tlabel: 'Ghoul Uptime (%)',\n\tlabelTooltip: 'Percent of the fight duration for which your ghoul will be on target.',\n\tpercent: true,\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().masterOfGhouls,\n});\n\nexport const DrwPestiApply = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\n\tfieldName: 'drwPestiApply',\n\tlabel: 'DRW Pestilence Add',\n\tlabelTooltip: 'There is currently an interaction with DRW and pestilence where you can use pestilence to force DRW to apply diseases if they are already applied by the DK. It only works with Glyph of Disease and if there is an off target. This toggle forces the sim to assume there is an off target.',\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0 && (player.getGlyphs().major1 == DeathknightMajorGlyph.GlyphOfDisease || player.getGlyphs().major2 == DeathknightMajorGlyph.GlyphOfDisease || player.getGlyphs().major3 == DeathknightMajorGlyph.GlyphOfDisease),\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const UseAMSInput = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\n\tfieldName: 'useAms',\n\tlabel: 'Use AMS',\n\tlabelTooltip: 'Use AMS around predicted damage for a RP gain.',\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().howlingBlast,\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const AvgAMSSuccessRateInput = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\n\tfieldName: 'avgAmsSuccessRate',\n\tlabel: 'Avg AMS Success %',\n\tlabelTooltip: 'Chance for damage to be taken during the 5 second window of AMS.',\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getSpecOptions().useAms == true && player.getTalents().howlingBlast,\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\n});\n\nexport const AvgAMSHitInput = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\n\tfieldName: 'avgAmsHit',\n\tlabel: 'Avg AMS Hit',\n\tlabelTooltip: 'How much on average (+-10%) the character is hit for when AMS is successful.',\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getSpecOptions().useAms == true && player.getTalents().howlingBlast,\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\n});\n","import {\n\tConsumes,\n\tExplosive,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tPetFood,\n\tPotions,\n\tUnitReference,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tDeathknight_Options as DeathKnightOptions,\n\tDeathknightMajorGlyph,\n\tDeathknightMinorGlyph,\n} from '../core/proto/deathknight.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport P1BloodGear from './gear_sets/p1_blood.gear.json';\nexport const P1_BLOOD_PRESET = PresetUtils.makePresetGear('P1 Blood', P1BloodGear, { talentTree: 0 });\nimport P2BloodGear from './gear_sets/p2_blood.gear.json';\nexport const P2_BLOOD_PRESET = PresetUtils.makePresetGear('P2 Blood', P2BloodGear, { talentTree: 0 });\nimport P3BloodGear from './gear_sets/p3_blood.gear.json';\nexport const P3_BLOOD_PRESET = PresetUtils.makePresetGear('P3 Blood', P3BloodGear, { talentTree: 0 });\nimport P4BloodGear from './gear_sets/p4_blood.gear.json';\nexport const P4_BLOOD_PRESET = PresetUtils.makePresetGear('P4 Blood', P4BloodGear, { talentTree: 0 });\nimport PreraidFrostGear from './gear_sets/preraid_frost.gear.json';\nexport const PRERAID_FROST_PRESET = PresetUtils.makePresetGear('Pre-Raid Frost', PreraidFrostGear, { talentTree: 1 });\nimport P1FrostGear from './gear_sets/p1_frost.gear.json';\nexport const P1_FROST_PRESET = PresetUtils.makePresetGear('P1 Frost', P1FrostGear, { talentTree: 1 });\nimport P2FrostGear from './gear_sets/p2_frost.gear.json';\nexport const P2_FROST_PRESET = PresetUtils.makePresetGear('P2 Frost', P2FrostGear, { talentTree: 1 });\nimport P3FrostGear from './gear_sets/p3_frost.gear.json';\nexport const P3_FROST_PRESET = PresetUtils.makePresetGear('P3 Frost', P3FrostGear, { talentTree: 1 });\nimport P4FrostGear from './gear_sets/p4_frost.gear.json';\nexport const P4_FROST_PRESET = PresetUtils.makePresetGear('P4 Frost', P4FrostGear, { talentTree: 1 });\nimport P1FrostSubUhGear from './gear_sets/p1_frost_subUh.gear.json';\nexport const P1_FROSTSUBUNH_PRESET = PresetUtils.makePresetGear('P1 Frost Sub Unh', P1FrostSubUhGear, { talentTree: 1 });\nimport PreraidUh2hGear from './gear_sets/preraid_uh_2h.gear.json';\nexport const PRERAID_UNHOLY_2H_PRESET = PresetUtils.makePresetGear('Pre-Raid 2H Unholy', PreraidUh2hGear, { talentTree: 2 });\nimport P1Uh2hGear from './gear_sets/p1_uh_2h.gear.json';\nexport const P1_UNHOLY_2H_PRESET = PresetUtils.makePresetGear('P1 2H Unholy', P1Uh2hGear, { talentTree: 2 });\nimport P4Uh2hGear from './gear_sets/p4_uh_2h.gear.json';\nexport const P4_UNHOLY_2H_PRESET = PresetUtils.makePresetGear('P4 2H Unholy', P4Uh2hGear, { talentTree: 2 });\nimport PreraidUhDwGear from './gear_sets/preraid_uh_dw.gear.json';\nexport const PRERAID_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('Pre-Raid DW Unholy', PreraidUhDwGear, { talentTree: 2 });\nimport P1UhDwGear from './gear_sets/p1_uh_dw.gear.json';\nexport const P1_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P1 DW Unholy', P1UhDwGear, { talentTree: 2 });\nimport P2UhDwGear from './gear_sets/p2_uh_dw.gear.json';\nexport const P2_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P2 DW Unholy', P2UhDwGear, { talentTree: 2 });\nimport P3UhDwGear from './gear_sets/p3_uh_dw.gear.json';\nexport const P3_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P3 DW Unholy', P3UhDwGear, { talentTree: 2 });\nimport P4UhDwGear from './gear_sets/p4_uh_dw.gear.json';\nexport const P4_UNHOLY_DW_PRESET = PresetUtils.makePresetGear('P4 DW Unholy', P4UhDwGear, { talentTree: 2 });\n\nimport BloodDPSApl from './apls/blood_dps.apl.json';\nexport const BLOOD_DPS_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Blood DPS', BloodDPSApl, { talentTree: 0 });\nimport BloodPestiAoeApl from './apls/blood_pesti_aoe.apl.json';\nexport const BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Blood Pesti AOE', BloodPestiAoeApl, { talentTree: 0 });\nimport FrostBlPestiApl from './apls/frost_bl_pesti.apl.json';\nexport const FROST_BL_PESTI_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Frost BL Pesti', FrostBlPestiApl, { talentTree: 1 });\nimport FrostUhPestiApl from './apls/frost_uh_pesti.apl.json';\nexport const FROST_UH_PESTI_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Frost UH Pesti', FrostUhPestiApl, { talentTree: 1 });\nimport UhDwSsApl from './apls/unholy_dw_ss.apl.json';\nexport const UNHOLY_DW_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Unholy DW SS', UhDwSsApl, { talentTree: 2 });\nimport Uh2hSsApl from './apls/uh_2h_ss.apl.json';\nexport const UNHOLY_2H_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Unholy 2H SS', Uh2hSsApl, { talentTree: 2 });\nimport UhDndAoeApl from './apls/uh_dnd_aoe.apl.json';\nexport const UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Unholy DND AOE', UhDndAoeApl, { talentTree: 2 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wotlk.wowhead.com/talent-calc and copy the numbers in the url.\nexport const FrostTalents = {\n\tname: 'Frost BL',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23050005-32005350352203012300033101351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfObliterate,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfFrostStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const FrostUnholyTalents = {\n\tname: 'Frost UH',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '01-32002350342203012300033101351-230200305003',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfObliterate,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfFrostStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const UnholyDualWieldTalents = {\n\tname: 'Unholy DW',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-320043500002-2300303050032152000150013133051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const UnholyDualWieldSSTalents = {\n\tname: 'Unholy DW SS',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-320033500002-2301303050032151000150013133151',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const Unholy2HTalents = {\n\tname: 'Unholy 2H',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-320050500002-2302003350032052000150013133151',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkDeath,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const UnholyAoeTalents = {\n\tname: 'Unholy AOE',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-320050500002-2302303050032052000150013133151',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDeathAndDecay,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const BloodTalents = {\n\tname: 'Blood DPS',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '2305120530003303231023001351--2302003050032',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDancingRuneWeapon,\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfDeathStrike,\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDisease,\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\n\t\t}),\n\t}),\n};\n\nexport const DefaultUnholyOptions = DeathKnightOptions.create({\n\tstartingRunicPower: 0,\n\tpetUptime: 1,\n\tunholyFrenzyTarget: UnitReference.create(),\n\tdrwPestiApply: true,\n});\n\nexport const DefaultFrostOptions = DeathKnightOptions.create({\n\tstartingRunicPower: 0,\n\tpetUptime: 1,\n\tunholyFrenzyTarget: UnitReference.create(),\n\tdrwPestiApply: true,\n});\n\nexport const DefaultBloodOptions = DeathKnightOptions.create({\n\tstartingRunicPower: 0,\n\tpetUptime: 1,\n\tunholyFrenzyTarget: UnitReference.create(),\n\tdrwPestiApply: true,\n});\n\nexport const OtherDefaults = {\n};\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\n\tprepopPotion: Potions.PotionOfSpeed,\n\tthermalSapper: true,\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\n});\n","import {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tHandType,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport { APLRotation } from '../core/proto/apl.js';\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as ConsumablesInputs from '../core/components/inputs/consumables.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as DeathKnightInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecDeathknight, {\n\tcssClass: 'deathknight-sim-ui',\n\tcssScheme: 'death-knight',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStrength,\n\t\tStat.StatArmor,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t],\n\tepPseudoStats: [\n\t\tPseudoStat.PseudoStatMainHandDps,\n\t\tPseudoStat.PseudoStatOffHandDps,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatExpertise,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P2_UNHOLY_DW_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatStrength]: 3.22,\n\t\t\t[Stat.StatAgility]: 0.62,\n\t\t\t[Stat.StatArmor]: 0.01,\n\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t[Stat.StatExpertise]: 1.13,\n\t\t\t[Stat.StatMeleeHaste]: 1.85,\n\t\t\t[Stat.StatMeleeHit]: 1.92,\n\t\t\t[Stat.StatMeleeCrit]: 0.76,\n\t\t\t[Stat.StatArmorPenetration]: 0.77,\n\t\t\t[Stat.StatSpellHit]: 0.80,\n\t\t\t[Stat.StatSpellCrit]: 0.34,\n\t\t}, {\n\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.10,\n\t\t\t[PseudoStat.PseudoStatOffHandDps]: 1.79,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.UnholyDualWieldTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultUnholyOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tswiftRetribution: true,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\ticyTalons: true,\n\t\t\tabominationsMight: true,\n\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\tsanctifiedRetribution: true,\n\t\t\tbloodlust: true,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\n\t\t\twrathOfAirTotem: true,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t\theroicPresence: false,\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tbloodFrenzy: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tsunderArmor: true,\n\t\t\tebonPlaguebringer: true,\n\t\t\tmangle: true,\n\t\t\theartOfTheCrusader: true,\n\t\t\tshadowMastery: true,\n\t\t}),\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecDeathknight>): APLRotation => {\n\t\tconst talentTree = player.getTalentTree();\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tswitch (talentTree) {\n\t\t\tcase 0: \n\t\t\t\tif (player.getSpecOptions().drwPestiApply || numTargets > 1) {\n\t\t\t\t\tif (numTargets > 5) {\n\t\t\t\t\t\treturn Presets.BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Presets.BLOOD_DPS_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn Presets.BLOOD_DPS_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t}\n\t\t\tcase 1: \n\t\t\t\tconst talentPoints = player.getTalentTreePoints()\n\t\t\t\t// TODO: Add Frost AOE rotation\n\t\t\t\tif (talentPoints[0] > talentPoints[2]) {\n\t\t\t\t\treturn Presets.FROST_BL_PESTI_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t} else {\n\t\t\t\t\treturn Presets.FROST_UH_PESTI_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t}\n\t\t\tdefault: \n\t\t\t\tif (numTargets > 1) {\n\t\t\t\t\treturn Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t} else {\n\t\t\t\t\tif (player.getEquippedItem(ItemSlot.ItemSlotMainHand)!.item.handType == HandType.HandTypeTwoHand) {\n\t\t\t\t\t\treturn Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t],\n\tpetConsumeInputs: [\n\t\tConsumablesInputs.SpicedMammothTreats,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellDamageDebuff,\n\t\tBuffDebuffInputs.StaminaBuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.AttackPowerDebuff,\n\t\tBuffDebuffInputs.DamageReductionPercentBuff,\n\t\tBuffDebuffInputs.MeleeAttackSpeedDebuff,\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tDeathKnightInputs.SelfUnholyFrenzy,\n\t\t\tDeathKnightInputs.StartingRunicPower,\n\t\t\tDeathKnightInputs.PetUptime,\n\t\t\tDeathKnightInputs.DrwPestiApply,\n\t\t\tDeathKnightInputs.UseAMSInput,\n\t\t\tDeathKnightInputs.AvgAMSSuccessRateInput,\n\t\t\tDeathKnightInputs.AvgAMSHitInput,\n\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\titemSwapSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.BloodTalents,\n\t\t\tPresets.FrostTalents,\n\t\t\tPresets.FrostUnholyTalents,\n\t\t\tPresets.UnholyDualWieldTalents,\n\t\t\tPresets.UnholyDualWieldSSTalents,\n\t\t\tPresets.Unholy2HTalents,\n\t\t\tPresets.UnholyAoeTalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.BLOOD_DPS_ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.FROST_BL_PESTI_ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.FROST_UH_PESTI_ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.UNHOLY_DW_ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.UNHOLY_2H_ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.P1_BLOOD_PRESET,\n\t\t\tPresets.P2_BLOOD_PRESET,\n\t\t\tPresets.P3_BLOOD_PRESET,\n\t\t\tPresets.P4_BLOOD_PRESET,\n\t\t\tPresets.P1_FROST_PRESET,\n\t\t\tPresets.P2_FROST_PRESET,\n\t\t\tPresets.P3_FROST_PRESET,\n\t\t\tPresets.P4_FROST_PRESET,\n\t\t\tPresets.P1_UNHOLY_DW_PRESET,\n\t\t\tPresets.P2_UNHOLY_DW_PRESET,\n\t\t\tPresets.P3_UNHOLY_DW_PRESET,\n\t\t\tPresets.P4_UNHOLY_DW_PRESET,\n\t\t\tPresets.P4_UNHOLY_2H_PRESET,\n\t\t\t// Not needed anymore just filling ui Space\n\t\t\t// Disabled on purpose\n\t\t\t//Presets.P1_FROSTSUBUNH_PRESET,\n\t\t\t//Presets.P1_FROST_PRE_BIS_PRESET,\n\t\t\t//Presets.PRERAID_UNHOLY_DW_PRESET,\n\t\t\t//Presets.PRERAID_UNHOLY_2H_PRESET,\n\t\t\t//Presets.P1_UNHOLY_2H_PRESET,\n\t\t],\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecDeathknight,\n\t\t\ttooltip: 'Frost Death Knight',\n\t\t\tdefaultName: 'Frost',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDeathknight, 1),\n\n\t\t\ttalents: Presets.FrostTalents.data,\n\t\t\tspecOptions: Presets.DefaultFrostOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_FROST_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_FROST_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_FROST_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_FROST_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_FROST_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_FROST_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_FROST_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_FROST_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecDeathknight,\n\t\t\ttooltip: 'Dual-Wield Unholy DK',\n\t\t\tdefaultName: 'Unholy',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDeathknight, 2),\n\n\t\t\ttalents: Presets.UnholyDualWieldTalents.data,\n\t\t\tspecOptions: Presets.DefaultUnholyOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_UNHOLY_DW_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_UNHOLY_DW_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_UNHOLY_DW_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t},\n\t],\n});\n\nexport class DeathknightSimUI extends IndividualSimUI<Spec.SpecDeathknight> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecDeathknight>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["SelfUnholyFrenzy","InputHelpers.makeSpecOptionsBooleanInput","fieldName","label","labelTooltip","extraCssClasses","getValue","player","getSpecOptions","unholyFrenzyTarget","type","UnitType","Player","setValue","eventID","newValue","newOptions","UnitReference","create","Unknown","index","setSpecOptions","showWhen","getTalents","hysteria","changeEmitter","TypedEvent","onAny","rotationChangeEmitter","talentsChangeEmitter","StartingRunicPower","InputHelpers.makeSpecOptionsNumberInput","PetUptime","percent","masterOfGhouls","DrwPestiApply","getTalentTree","getGlyphs","major1","DeathknightMajorGlyph","GlyphOfDisease","major2","major3","specOptionsChangeEmitter","UseAMSInput","howlingBlast","AvgAMSSuccessRateInput","useAms","AvgAMSHitInput","P1_BLOOD_PRESET","PresetUtils.makePresetGear","talentTree","P2_BLOOD_PRESET","P2BloodGear","P3_BLOOD_PRESET","P3BloodGear","P4_BLOOD_PRESET","P4BloodGear","PreraidFrostGear","P1_FROST_PRESET","P1FrostGear","P2_FROST_PRESET","P2FrostGear","P3_FROST_PRESET","P3FrostGear","P4_FROST_PRESET","P4FrostGear","P1FrostSubUhGear","PreraidUh2hGear","P1Uh2hGear","P4_UNHOLY_2H_PRESET","P4Uh2hGear","PreraidUhDwGear","P1_UNHOLY_DW_PRESET","P1UhDwGear","P2_UNHOLY_DW_PRESET","P2UhDwGear","P3_UNHOLY_DW_PRESET","P3UhDwGear","P4_UNHOLY_DW_PRESET","P4UhDwGear","BLOOD_DPS_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","BloodDPSApl","BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT","BloodPestiAoeApl","FROST_BL_PESTI_ROTATION_PRESET_DEFAULT","FrostBlPestiApl","FROST_UH_PESTI_ROTATION_PRESET_DEFAULT","FrostUhPestiApl","UNHOLY_DW_ROTATION_PRESET_DEFAULT","UhDwSsApl","UNHOLY_2H_ROTATION_PRESET_DEFAULT","Uh2hSsApl","UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT","UhDndAoeApl","FrostTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","GlyphOfObliterate","GlyphOfFrostStrike","minor1","DeathknightMinorGlyph","GlyphOfHornOfWinter","minor2","GlyphOfPestilence","minor3","GlyphOfRaiseDead","FrostUnholyTalents","UnholyDualWieldTalents","GlyphOfTheGhoul","GlyphOfIcyTouch","GlyphOfDeathAndDecay","UnholyDualWieldSSTalents","Unholy2HTalents","GlyphOfDarkDeath","UnholyAoeTalents","BloodTalents","GlyphOfDancingRuneWeapon","GlyphOfDeathStrike","DefaultUnholyOptions","DeathKnightOptions","startingRunicPower","petUptime","drwPestiApply","DefaultFrostOptions","OtherDefaults","DefaultConsumes","Consumes","flask","Flask","FlaskOfEndlessRage","food","Food","FoodDragonfinFilet","defaultPotion","Potions","PotionOfSpeed","petFood","PetFood","PetFoodSpicedMammothTreats","prepopPotion","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","SPEC_CONFIG","registerSpecConfig","Spec","SpecDeathknight","cssClass","cssScheme","knownIssues","epStats","Stat","StatStrength","StatArmor","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatSpellHit","StatSpellCrit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.P2_UNHOLY_DW_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.UnholyDualWieldTalents","specOptions","Presets.DefaultUnholyOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","swiftRetribution","strengthOfEarthTotem","icyTalons","abominationsMight","leaderOfThePack","TristateEffectRegular","sanctifiedRetribution","bloodlust","devotionAura","stoneskinTotem","moonkinAura","wrathOfAirTotem","powerWordFortitude","partyBuffs","PartyBuffs","heroicPresence","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","bloodFrenzy","faerieFire","sunderArmor","ebonPlaguebringer","mangle","heartOfTheCrusader","shadowMastery","autoRotation","numTargets","sim","encounter","targets","length","Presets.BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT","rotation","Presets.BLOOD_DPS_ROTATION_PRESET_DEFAULT","talentPoints","getTalentTreePoints","Presets.FROST_BL_PESTI_ROTATION_PRESET_DEFAULT","Presets.FROST_UH_PESTI_ROTATION_PRESET_DEFAULT","Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT","getEquippedItem","ItemSlot","ItemSlotMainHand","item","handType","HandType","HandTypeTwoHand","Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT","Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT","playerIconInputs","petConsumeInputs","ConsumablesInputs.SpicedMammothTreats","includeBuffDebuffInputs","BuffDebuffInputs.SpellDamageDebuff","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","BuffDebuffInputs.AttackPowerDebuff","BuffDebuffInputs.DamageReductionPercentBuff","BuffDebuffInputs.MeleeAttackSpeedDebuff","otherInputs","inputs","DeathKnightInputs.SelfUnholyFrenzy","DeathKnightInputs.StartingRunicPower","DeathKnightInputs.PetUptime","DeathKnightInputs.DrwPestiApply","DeathKnightInputs.UseAMSInput","DeathKnightInputs.AvgAMSSuccessRateInput","DeathKnightInputs.AvgAMSHitInput","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","itemSwapSlots","ItemSlotOffHand","encounterPicker","showExecuteProportion","presets","Presets.BloodTalents","Presets.FrostTalents","Presets.FrostUnholyTalents","Presets.UnholyDualWieldSSTalents","Presets.Unholy2HTalents","Presets.UnholyAoeTalents","rotations","Presets.P1_BLOOD_PRESET","Presets.P2_BLOOD_PRESET","Presets.P3_BLOOD_PRESET","Presets.P4_BLOOD_PRESET","Presets.P1_FROST_PRESET","Presets.P2_FROST_PRESET","Presets.P3_FROST_PRESET","Presets.P4_FROST_PRESET","Presets.P1_UNHOLY_DW_PRESET","Presets.P3_UNHOLY_DW_PRESET","Presets.P4_UNHOLY_DW_PRESET","Presets.P4_UNHOLY_2H_PRESET","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassDeathknight","Presets.DefaultFrostOptions","defaultFactionRaces","Faction","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceTroll","defaultGear","otherDefaults","Presets.OtherDefaults","DeathknightSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}