{"version":3,"file":"sim-2ac498ea.chunk.js","sources":["../../../ui/restoration_druid/inputs.ts","../../../ui/restoration_druid/presets.ts","../../../ui/restoration_druid/sim.ts"],"sourcesContent":["import { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfInnervate = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecRestorationDruid>({\n\tfieldName: 'innervateTarget',\n\tid: ActionId.fromSpellId(29166),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecRestorationDruid>) => player.getSpecOptions().innervateTarget?.type == UnitType.Player,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecRestorationDruid>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.innervateTarget = UnitReference.create({\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\n\t\t\tindex: 0,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n","import {\n\tConsumes,\n\tDebuffs,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tPotions,\n\tRaidBuffs,\n\tUnitReference,\n\tTristateEffect\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tRestorationDruid_Options as RestorationDruidOptions,\n\tDruidMajorGlyph,\n\tDruidMinorGlyph,\n} from '../core/proto/druid.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('PreRaid', PreraidGear);\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nimport P3Gear from './gear_sets/p3.gear.json';\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nimport P4Gear from './gear_sets/p4.gear.json';\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const CelestialFocusTalents = {\n\tname: 'Celestial Focus',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05320031103--230023312131502331050313051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfWildGrowth,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfSwiftmend,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfNourish,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfDash,\n\t\t}),\n\t}),\n};\nexport const ThiccRestoTalents = {\n\tname: 'Thicc Resto',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05320001--230023312331502531053313051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: DruidMajorGlyph.GlyphOfWildGrowth,\n\t\t\tmajor2: DruidMajorGlyph.GlyphOfSwiftmend,\n\t\t\tmajor3: DruidMajorGlyph.GlyphOfNourish,\n\t\t\tminor2: DruidMinorGlyph.GlyphOfUnburdenedRebirth,\n\t\t\tminor3: DruidMinorGlyph.GlyphOfTheWild,\n\t\t\tminor1: DruidMinorGlyph.GlyphOfDash,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = RestorationDruidOptions.create({\n\tinnervateTarget: UnitReference.create(),\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.RunicManaPotion,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tarcaneBrilliance: true,\n\tbloodlust: true,\n\tdivineSpirit: true,\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tsanctifiedRetribution: true,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\ttrueshotAura: true,\n\twrathOfAirTotem: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DefaultPartyBuffs = PartyBuffs.create({\n\theroicPresence: false,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n\tshadowMastery: true,\n\tsunderArmor: true,\n\ttotemOfWrath: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 18,\n};\n","import {\n\tClass,\n\tFaction,\n\tRace,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as DruidInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecRestorationDruid, {\n\tcssClass: 'restoration-druid-sim-ui',\n\tcssScheme: 'druid',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.38,\n\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.69,\n\t\t\t[Stat.StatSpellHaste]: 0.77,\n\t\t\t[Stat.StatMP5]: 0.00,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.CelestialFocusTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: Presets.DefaultPartyBuffs,\n\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tDruidInputs.SelfInnervate,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.CelestialFocusTalents,\n\t\t\tPresets.ThiccRestoTalents,\n\t\t],\n\t\trotations: [\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecRestorationDruid>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecRestorationDruid,\n\t\t\ttooltip: specNames[Spec.SpecRestorationDruid],\n\t\t\tdefaultName: 'Restoration',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDruid, 2),\n\n\t\t\ttalents: Presets.CelestialFocusTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class RestorationDruidSimUI extends IndividualSimUI<Spec.SpecRestorationDruid> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRestorationDruid>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["SelfInnervate","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","innervateTarget","type","UnitType","Player","setValue","eventID","newValue","newOptions","UnitReference","create","Unknown","index","setSpecOptions","PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","CelestialFocusTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","DruidMajorGlyph","GlyphOfWildGrowth","major2","GlyphOfSwiftmend","major3","GlyphOfNourish","minor2","DruidMinorGlyph","GlyphOfUnburdenedRebirth","minor3","GlyphOfTheWild","minor1","GlyphOfDash","ThiccRestoTalents","DefaultOptions","RestorationDruidOptions","DefaultConsumes","Consumes","defaultPotion","Potions","RunicManaPotion","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","DefaultRaidBuffs","RaidBuffs","arcaneBrilliance","bloodlust","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","icyTalons","moonkinAura","leaderOfThePack","powerWordFortitude","sanctifiedRetribution","strengthOfEarthTotem","trueshotAura","wrathOfAirTotem","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfWisdom","vampiricTouch","DefaultPartyBuffs","PartyBuffs","heroicPresence","DefaultDebuffs","Debuffs","bloodFrenzy","ebonPlaguebringer","faerieFire","heartOfTheCrusader","judgementOfWisdom","shadowMastery","sunderArmor","totemOfWrath","SPEC_CONFIG","registerSpecConfig","Spec","SpecRestorationDruid","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.CelestialFocusTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","Presets.DefaultPartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","distanceFromTarget","playerIconInputs","DruidInputs.SelfInnervate","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","Presets.ThiccRestoTalents","rotations","Presets.PRERAID_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","Presets.P4_PRESET","autoRotation","_player","APLRotation","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassDruid","defaultFactionRaces","Faction","Race","RaceUnknown","Alliance","RaceNightElf","Horde","RaceTauren","defaultGear","RestorationDruidSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}