{"version":3,"file":"sim-a42d37c9.chunk.js","sources":["../../../ui/holy_paladin/inputs.ts","../../../ui/holy_paladin/presets.ts","../../../ui/holy_paladin/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\n\nimport {\n\tPaladinAura,\n\tPaladinJudgement,\n} from '../core/proto/paladin.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const AuraSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecHolyPaladin, PaladinAura>({\n\tfieldName: 'aura',\n\tlabel: 'Aura',\n\tvalues: [\n\t\t{ name: 'None', value: PaladinAura.NoPaladinAura },\n\t\t{ name: 'Devotion Aura', value: PaladinAura.DevotionAura },\n\t\t{ name: 'Retribution Aura', value: PaladinAura.RetributionAura },\n\t],\n});\n\nexport const JudgementSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecHolyPaladin, PaladinJudgement>({\n\tfieldName: 'judgement',\n\tlabel: 'Judgement',\n\tlabelTooltip: 'Judgement debuff you will use on the target during the encounter.',\n\tvalues: [\n\t\t{ name: 'None', value: PaladinJudgement.NoJudgement },\n\t\t{ name: 'Wisdom', value: PaladinJudgement.JudgementOfWisdom },\n\t\t{ name: 'Light', value: PaladinJudgement.JudgementOfLight },\n\t],\n});\n","import {\n\tConsumes,\n\tFlask,\n\tFood,\n\tPotions,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tPaladinAura,\n\tPaladinMajorGlyph,\n\tPaladinMinorGlyph,\n\tPaladinJudgement,\n\tHolyPaladin_Options as HolyPaladinOptions,\n} from '../core/proto/paladin.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('PreRaid', PreraidGear);\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nimport P3Gear from './gear_sets/p3.gear.json';\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nimport P4Gear from './gear_sets/p4.gear.json';\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50350151020013053100515221-50023131203',\n\t\tglyphs: {\n\t\t\tmajor1: PaladinMajorGlyph.GlyphOfHolyLight,\n\t\t\tmajor2: PaladinMajorGlyph.GlyphOfSealOfWisdom,\n\t\t\tmajor3: PaladinMajorGlyph.GlyphOfBeaconOfLight,\n\t\t\tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\n\t\t\tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\n\t\t\tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings\n\t\t}\n\t}),\n};\n\nexport const DefaultOptions = HolyPaladinOptions.create({\n\taura: PaladinAura.DevotionAura,\n\tjudgement: PaladinJudgement.NoJudgement,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.RunicManaPotion,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n","import {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as HolyPaladinInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecHolyPaladin, {\n\tcssClass: 'holy-paladin-sim-ui',\n\tcssScheme: 'paladin',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P1_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.38,\n\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.69,\n\t\t\t[Stat.StatSpellHaste]: 0.77,\n\t\t\t[Stat.StatMP5]: 0.00,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\tarcaneBrilliance: true,\n\t\t\tunleashedRage: true,\n\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\ticyTalons: true,\n\t\t\ttotemOfWrath: true,\n\t\t\tdemonicPactSp: 500,\n\t\t\tswiftRetribution: true,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\n\t\t\tsanctifiedRetribution: true,\n\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\tbloodlust: true,\n\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tshadowProtection: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfSanctuary: true,\n\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgementOfWisdom: true,\n\t\t\tjudgementOfLight: true,\n\t\t\tmisery: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tebonPlaguebringer: true,\n\t\t\ttotemOfWrath: true,\n\t\t\tshadowMastery: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tmangle: true,\n\t\t\texposeArmor: true,\n\t\t\tsunderArmor: true,\n\t\t\tvindication: true,\n\t\t\tthunderClap: TristateEffect.TristateEffectImproved,\n\t\t\tinsectSwarm: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tHolyPaladinInputs.AuraSelection,\n\t\t\tHolyPaladinInputs.JudgementSelection,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t],\n\t\trotations: [\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecHolyPaladin>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecHolyPaladin,\n\t\t\ttooltip: 'Holy Paladin',\n\t\t\tdefaultName: 'Holy',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 0),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class HolyPaladinSimUI extends IndividualSimUI<Spec.SpecHolyPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHolyPaladin>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["AuraSelection","InputHelpers.makeSpecOptionsEnumInput","fieldName","label","values","name","value","PaladinAura","NoPaladinAura","DevotionAura","RetributionAura","JudgementSelection","labelTooltip","PaladinJudgement","NoJudgement","JudgementOfWisdom","JudgementOfLight","PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","StandardTalents","data","SavedTalents","create","talentsString","glyphs","major1","PaladinMajorGlyph","GlyphOfHolyLight","major2","GlyphOfSealOfWisdom","major3","GlyphOfBeaconOfLight","minor2","PaladinMinorGlyph","GlyphOfLayOnHands","minor1","GlyphOfSenseUndead","minor3","GlyphOfBlessingOfKings","DefaultOptions","HolyPaladinOptions","aura","judgement","DefaultConsumes","Consumes","defaultPotion","Potions","RunicManaPotion","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","SPEC_CONFIG","registerSpecConfig","Spec","SpecHolyPaladin","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","unleashedRage","leaderOfThePack","TristateEffectRegular","icyTalons","totemOfWrath","demonicPactSp","swiftRetribution","moonkinAura","sanctifiedRetribution","manaSpringTotem","bloodlust","thorns","devotionAura","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfSanctuary","blessingOfWisdom","blessingOfMight","debuffs","Debuffs","judgementOfWisdom","judgementOfLight","misery","faerieFire","ebonPlaguebringer","shadowMastery","bloodFrenzy","mangle","exposeArmor","sunderArmor","vindication","thunderClap","insectSwarm","playerIconInputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.InspirationUptime","HolyPaladinInputs.AuraSelection","HolyPaladinInputs.JudgementSelection","encounterPicker","showExecuteProportion","presets","rotations","Presets.PRERAID_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","Presets.P4_PRESET","autoRotation","_player","APLRotation","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassPaladin","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceBloodElf","defaultGear","HolyPaladinSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"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"}