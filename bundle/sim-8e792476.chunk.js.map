{"version":3,"file":"sim-8e792476.chunk.js","sources":["../../../ui/elemental_shaman/inputs.ts","../../../ui/elemental_shaman/presets.ts","../../../ui/elemental_shaman/sim.ts"],"sourcesContent":["import { ElementalShaman_Options_ThunderstormRange, ShamanShield } from '../core/proto/shaman.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\nimport { EventID } from 'ui/core/typed_event.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const InThunderstormRange = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecElementalShaman>({\n\tfieldName: 'thunderstormRange',\n\t// id: ActionId.fromSpellId(59159),\n\tlabel: \"Thunderstorm In Range\",\n\tlabelTooltip: \"When set to true, thunderstorm casts will cause damage.\",\n\tgetValue: (player: Player<Spec.SpecElementalShaman>) => player.getSpecOptions().thunderstormRange == ElementalShaman_Options_ThunderstormRange.TSInRange,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecElementalShaman>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tif (newValue) {\n\t\t\tnewOptions.thunderstormRange = ElementalShaman_Options_ThunderstormRange.TSInRange;\n\t\t} else {\n\t\t\tnewOptions.thunderstormRange = ElementalShaman_Options_ThunderstormRange.TSOutofRange;\n\t\t}\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecElementalShaman, ShamanShield>({\n\tfieldName: 'shield',\n\tvalues: [\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t{ actionId: ActionId.fromSpellId(57960), value: ShamanShield.WaterShield },\n\t\t{ actionId: ActionId.fromSpellId(49281), value: ShamanShield.LightningShield },\n\t],\n});\n","import {\n\tConsumes,\n\tFaction,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tPotions,\n  Profession,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n  ElementalShaman_Options as ElementalShamanOptions,\n  ShamanShield,\n  ShamanMajorGlyph,\n  ShamanMinorGlyph,\n  AirTotem,\n  EarthTotem,\n  FireTotem,\n  WaterTotem,\n  ShamanTotems,\n} from '../core/proto/shaman.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Pre-raid Preset', PreraidGear);\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nimport P3AllianceGear from './gear_sets/p3_alliance.gear.json';\nexport const P3_PRESET_ALLI = PresetUtils.makePresetGear('P3 Preset [A]', P3AllianceGear, { faction: Faction.Alliance });\nimport P3HordeGear from './gear_sets/p3_horde.gear.json';\nexport const P3_PRESET_HORDE = PresetUtils.makePresetGear('P3 Preset [H]', P3HordeGear, { faction: Faction.Horde });\nimport P4Gear from './gear_sets/p4.gear.json';\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\nimport DefaultApl from './apls/default.apl.json';\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\nimport AdvancedApl from './apls/advanced.apl.json';\nexport const ROTATION_PRESET_ADVANCED = PresetUtils.makePresetAPLRotation('Advanced', AdvancedApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n  name: 'Standard',\n  data: SavedTalents.create({\n    talentsString: '0533001523213351322301351-005050031',\n    glyphs: Glyphs.create({\n      major1: ShamanMajorGlyph.GlyphOfFlametongueWeapon,\n      major2: ShamanMajorGlyph.GlyphOfTotemOfWrath,\n      major3: ShamanMajorGlyph.GlyphOfLightningBolt,\n      minor1: ShamanMinorGlyph.GlyphOfThunderstorm,\n      minor2: ShamanMinorGlyph.GlyphOfWaterShield,\n      minor3: ShamanMinorGlyph.GlyphOfGhostWolf,\n    }),\n  }),\n};\n\nexport const DefaultOptions = ElementalShamanOptions.create({\n  shield: ShamanShield.WaterShield,\n  totems: ShamanTotems.create({\n    earth: EarthTotem.StrengthOfEarthTotem,\n    air: AirTotem.WrathOfAirTotem,\n    fire: FireTotem.TotemOfWrath,\n    water: WaterTotem.ManaSpringTotem,\n    useFireElemental: true,\n  }),\n});\n\nexport const OtherDefaults = {\n    distanceFromTarget: 20,\n    profession1: Profession.Engineering,\n    profession2: Profession.Tailoring,\n    nibelungAverageCasts: 11,\n}\n\nexport const DefaultConsumes = Consumes.create({\n  defaultPotion: Potions.PotionOfWildMagic,\n  flask: Flask.FlaskOfTheFrostWyrm,\n  food: Food.FoodFishFeast,\n});","import {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { TypedEvent } from '../core/typed_event.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecElementalShaman, {\n\tcssClass: 'elemental-shaman-sim-ui',\n\tcssScheme: 'shaman',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\twarnings: [\n\t\t// Warning to use all 4 totems if T6 2pc bonus is active.\n\t\t(simUI: IndividualSimUI<Spec.SpecElementalShaman>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: TypedEvent.onAny([simUI.player.rotationChangeEmitter, simUI.player.currentStatsEmitter]),\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tconst hasT62P = simUI.player.getCurrentStats().sets.includes('Skyshatter Regalia (2pc)');\n\t\t\t\t\tconst totems = simUI.player.getSpecOptions().totems!;\n\t\t\t\t\tconst hasAll4Totems = totems && totems.earth && totems.air && totems.fire && totems.water;\n\t\t\t\t\tif (hasT62P && !hasAll4Totems) {\n\t\t\t\t\t\treturn 'T6 2pc bonus is equipped, but inactive because not all 4 totem types are being used.';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecElementalShaman>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().elementalPrecision * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\tstats = stats.addStat(Stat.StatSpellCrit,\n\t\t\tplayer.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_PRESET_HORDE.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t[Stat.StatMP5]: 0.08,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tdivineSpirit: true,\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t\tsanctifiedRetribution: true,\n\t\t\tdemonicPactSp: 500,\n\t\t\twrathOfAirTotem: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfWisdom: 2,\n\t\t\tvampiricTouch: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tjudgementOfWisdom: true,\n\t\t\tmisery: true,\n\t\t\tcurseOfElements: true,\n\t\t\tshadowMastery: true,\n\t\t\theartOfTheCrusader: true,\n\t\t}),\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tShamanInputs.ShamanShieldInput,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tShamanInputs.InThunderstormRange,\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.nibelungAverageCasts,\n\t\t],\n\t},\n\tcustomSections: [\n\t\tTotemsSection,\n\t],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.ROTATION_PRESET_ADVANCED,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET_ALLI,\n\t\t\tPresets.P3_PRESET_HORDE,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecElementalShaman>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecElementalShaman,\n\t\t\ttooltip: specNames[Spec.SpecElementalShaman],\n\t\t\tdefaultName: 'Elemental',\n\t\t\ticonUrl: getSpecIcon(Class.ClassShaman, 0),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_ALLI.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_HORDE.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ElementalShamanSimUI extends IndividualSimUI<Spec.SpecElementalShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecElementalShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["InThunderstormRange","InputHelpers.makeSpecOptionsBooleanInput","fieldName","label","labelTooltip","getValue","player","getSpecOptions","thunderstormRange","ElementalShaman_Options_ThunderstormRange","TSInRange","setValue","eventID","newValue","newOptions","TSOutofRange","setSpecOptions","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","ShamanShield","NoShield","tooltip","actionId","ActionId","fromSpellId","WaterShield","LightningShield","PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET_ALLI","P3AllianceGear","faction","Faction","Alliance","P3_PRESET_HORDE","P3HordeGear","Horde","P4_PRESET","P4Gear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","ROTATION_PRESET_ADVANCED","AdvancedApl","StandardTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","ShamanMajorGlyph","GlyphOfFlametongueWeapon","major2","GlyphOfTotemOfWrath","major3","GlyphOfLightningBolt","minor1","ShamanMinorGlyph","GlyphOfThunderstorm","minor2","GlyphOfWaterShield","minor3","GlyphOfGhostWolf","DefaultOptions","ElementalShamanOptions","shield","totems","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WrathOfAirTotem","fire","FireTotem","TotemOfWrath","water","WaterTotem","ManaSpringTotem","useFireElemental","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","nibelungAverageCasts","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfWildMagic","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","SPEC_CONFIG","registerSpecConfig","Spec","SpecElementalShaman","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","TypedEvent","onAny","rotationChangeEmitter","currentStatsEmitter","getContent","hasT62P","getCurrentStats","sets","includes","hasAll4Totems","epStats","Stat","StatIntellect","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","elementalPrecision","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","gear","Presets.P3_PRESET_HORDE","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.StandardTalents","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","sanctifiedRetribution","demonicPactSp","wrathOfAirTotem","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","vampiricTouch","debuffs","Debuffs","faerieFire","judgementOfWisdom","misery","curseOfElements","shadowMastery","heartOfTheCrusader","playerIconInputs","ShamanInputs.ShamanShieldInput","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","ShamanInputs.InThunderstormRange","OtherInputs.TankAssignment","OtherInputs.nibelungAverageCasts","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.ROTATION_PRESET_ADVANCED","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P3_PRESET_ALLI","Presets.P4_PRESET","autoRotation","_player","rotation","raidSimPresets","spec","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassShaman","defaultFactionRaces","Unknown","Race","RaceUnknown","RaceDraenei","RaceOrc","defaultGear","ElementalShamanSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}