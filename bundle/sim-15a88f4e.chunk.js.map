{"version":3,"file":"sim-15a88f4e.chunk.js","sources":["../../../ui/protection_paladin/inputs.ts","../../../ui/protection_paladin/presets.ts","../../../ui/protection_paladin/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\n\nimport {\n\tPaladinAura as PaladinAura,\n\tPaladinSeal,\n\tPaladinJudgement as PaladinJudgement,\n} from '../core/proto/paladin.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const AuraSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecProtectionPaladin, PaladinAura>({\n\tfieldName: 'aura',\n\tlabel: 'Aura',\n\tvalues: [\n\t\t{ name: 'None', value: PaladinAura.NoPaladinAura },\n\t\t{ name: 'Devotion Aura', value: PaladinAura.DevotionAura },\n\t\t{ name: 'Retribution Aura', value: PaladinAura.RetributionAura },\n\t],\n});\n\nexport const StartingSealSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecProtectionPaladin, PaladinSeal>({\n\tfieldName: 'seal',\n\tlabel: 'Seal',\n\tlabelTooltip: 'The seal active before encounter',\n\tvalues: [\n\t\t{ name: 'Vengeance', value: PaladinSeal.Vengeance },\n\t\t{ name: 'Command', value: PaladinSeal.Command },\n\t],\n});\n\nexport const JudgementSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecProtectionPaladin, PaladinJudgement>({\n\tfieldName: 'judgement',\n\tlabel: 'Judgement',\n\tlabelTooltip: 'Judgement debuff you will use on the target during the encounter.',\n\tvalues: [\n\t\t{ name: 'Wisdom', value: PaladinJudgement.JudgementOfWisdom },\n\t\t{ name: 'Light', value: PaladinJudgement.JudgementOfLight },\n\t],\n});\n\nexport const UseAvengingWrath = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecProtectionPaladin>({\n\tfieldName: 'useAvengingWrath',\n\tlabel: 'Use Avenging Wrath',\n});\n","import {\n\tConsumes,\n\tFlask,\n\tFood,\n\tPotions,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tPaladinAura as PaladinAura,\n\tPaladinMajorGlyph,\n\tPaladinMinorGlyph,\n\tPaladinJudgement as PaladinJudgement,\n\tProtectionPaladin_Options as ProtectionPaladinOptions,\n} from '../core/proto/paladin.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('P1 PreRaid Preset', PreraidGear);\nimport P4PreraidGear from './gear_sets/p4_preraid.gear.json';\nexport const P4_PRERAID_PRESET = PresetUtils.makePresetGear('P4 PreRaid Preset', P4PreraidGear);\nimport P1Gear from './gear_sets/p1.gear.json';\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nimport P2Gear from './gear_sets/p2.gear.json';\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nimport P3Gear from './gear_sets/p3.gear.json';\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nimport P4Gear from './gear_sets/p4.gear.json';\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\nimport DefaultApl from './apls/default.apl.json';\nexport const ROTATION_DEFAULT = PresetUtils.makePresetAPLRotation('Default (969)', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const GenericAoeTalents = {\n\tname: 'Baseline Example',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-05005135200132311333312321-511302012003',\n\t\tglyphs: {\n\t\t\tmajor1: PaladinMajorGlyph.GlyphOfSealOfVengeance,\n\t\t\tmajor2: PaladinMajorGlyph.GlyphOfRighteousDefense,\n\t\t\tmajor3: PaladinMajorGlyph.GlyphOfDivinePlea,\n\t\t\tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\n\t\t\tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\n\t\t\tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings\n\t\t}\n\t}),\n};\n\nexport const DefaultOptions = ProtectionPaladinOptions.create({\n\taura: PaladinAura.RetributionAura,\n\tjudgement: PaladinJudgement.JudgementOfWisdom,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfStoneblood,\n\tfood: Food.FoodDragonfinFilet,\n\tdefaultPotion: Potions.IndestructiblePotion,\n\tprepopPotion: Potions.IndestructiblePotion,\n});\n","import {\n\tClass,\n\tCooldowns,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat, PseudoStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLAction,\n\tAPLListItem,\n\tAPLPrepullAction,\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { TypedEvent } from '../core/typed_event.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as AplUtils from '../core/proto_utils/apl_utils.js';\n\nimport { PaladinMajorGlyph, PaladinSeal, ProtectionPaladin_Rotation as ProtectionPaladinRotation } from '../core/proto/paladin.js';\n\nimport * as ProtectionPaladinInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecProtectionPaladin, {\n\tcssClass: 'protection-paladin-sim-ui',\n\tcssScheme: 'paladin',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\tepPseudoStats: [\n\t\tPseudoStat.PseudoStatMainHandDps,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecProtectionPaladin>) => {\n\t\tlet stats = new Stats();\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (player.getMajorGlyphs().includes(PaladinMajorGlyph.GlyphOfSealOfVengeance) && (player.getSpecOptions().seal == PaladinSeal.Vengeance)) {\n\t\t\t\tstats = stats.addStat(Stat.StatExpertise, 10 * Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION);\n\t\t\t}\n\t\t})\n\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P3_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatArmor]: 0.07,\n\t\t\t[Stat.StatBonusArmor]: 0.06,\n\t\t\t[Stat.StatStamina]: 1.14,\n\t\t\t[Stat.StatStrength]: 1.00,\n\t\t\t[Stat.StatAgility]: 0.62,\n\t\t\t[Stat.StatAttackPower]: 0.26,\n\t\t\t[Stat.StatExpertise]: 0.69,\n\t\t\t[Stat.StatMeleeHit]: 0.79,\n\t\t\t[Stat.StatMeleeCrit]: 0.30,\n\t\t\t[Stat.StatMeleeHaste]: 0.17,\n\t\t\t[Stat.StatArmorPenetration]: 0.04,\n\t\t\t[Stat.StatSpellPower]: 0.13,\n\t\t\t[Stat.StatBlock]: 0.52,\n\t\t\t[Stat.StatBlockValue]: 0.28,\n\t\t\t[Stat.StatDodge]: 0.46,\n\t\t\t[Stat.StatParry]: 0.61,\n\t\t\t[Stat.StatDefense]: 0.54,\n\t\t}, {\n\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.33,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.GenericAoeTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\tarcaneBrilliance: true,\n\t\t\tunleashedRage: true,\n\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\n\t\t\ticyTalons: true,\n\t\t\ttotemOfWrath: true,\n\t\t\tdemonicPactSp: 500,\n\t\t\tswiftRetribution: true,\n\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\n\t\t\tsanctifiedRetribution: true,\n\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\tbloodlust: true,\n\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tshadowProtection: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfSanctuary: true,\n\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgementOfWisdom: true,\n\t\t\tjudgementOfLight: true,\n\t\t\tmisery: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tebonPlaguebringer: true,\n\t\t\ttotemOfWrath: true,\n\t\t\tshadowMastery: true,\n\t\t\tbloodFrenzy: true,\n\t\t\tmangle: true,\n\t\t\texposeArmor: true,\n\t\t\tsunderArmor: true,\n\t\t\tvindication: true,\n\t\t\tthunderClap: TristateEffect.TristateEffectImproved,\n\t\t\tinsectSwarm: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.HealthBuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tProtectionPaladinInputs.AuraSelection,\n\t\t\tProtectionPaladinInputs.UseAvengingWrath,\n\t\t\tProtectionPaladinInputs.JudgementSelection,\n\t\t\tProtectionPaladinInputs.StartingSealSelection,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.GenericAoeTalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_DEFAULT,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P4_PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecProtectionPaladin>): APLRotation => {\n\t\treturn Presets.ROTATION_DEFAULT.rotation.rotation!;\n\t},\n\n\tsimpleRotation: (player: Player<Spec.SpecProtectionPaladin>, simple: ProtectionPaladinRotation, cooldowns: Cooldowns): APLRotation => {\n\t\tlet [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\tconst holyShieldPrepull = APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48952}}},\"doAtValue\":{\"const\":{\"val\":\"-3s\"}}}`);\n\t\tconst divinePlea = APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":54428}}},\"doAtValue\":{\"const\":{\"val\":\"-1500ms\"}}}`);\n\t\tprepullActions.push(holyShieldPrepull, divinePlea);\n\n\t\tconst shieldOfRighteousness = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":61411}}}`);\n\t\tconst hammerOfRighteousness = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":53595}}}`);\n\t\tconst hammerOfWrath = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48806}}}`);\n\t\tconst waitPrimary = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":61411}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":53595}}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"min\":{\"vals\":[{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}}]}},\"rhs\":{\"const\":{\"val\":\"350ms\"}}}}]}},\"wait\":{\"duration\":{\"min\":{\"vals\":[{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}}]}}}}`);\n\t\tconst consecration = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48819}}}`);\n\t\tconst holyShield = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":48952}}}`);\n\t\tconst judgementOfWisdom = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":53408}}}`);\n\t\tconst waitSecondary = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"gcdIsReady\":{}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":61411}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":53595}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48819}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48952}}}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":53408}}}}}]}},\"wait\":{\"duration\":{\"min\":{\"vals\":[{\"spellTimeToReady\":{\"spellId\":{\"spellId\":61411}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53595}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48819}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48952}}},{\"spellTimeToReady\":{\"spellId\":{\"spellId\":53408}}}]}}}}`);\n\n\t\tactions.push(...[\n\t\t\tshieldOfRighteousness,\n\t\t\thammerOfRighteousness,\n\t\t\thammerOfWrath,\n\t\t\twaitPrimary,\n\t\t\tconsecration,\n\t\t\tholyShield,\n\t\t\tjudgementOfWisdom,\n\t\t\twaitSecondary,\n\t\t].filter(a => a) as Array<APLAction>)\n\n\t\treturn APLRotation.create({\n\t\t\tprepullActions: prepullActions,\n\t\t\tpriorityList: actions.map(action => APLListItem.create({\n\t\t\t\taction: action,\n\t\t\t}))\n\t\t});\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecProtectionPaladin,\n\t\t\ttooltip: 'Protection Paladin',\n\t\t\tdefaultName: 'Protection',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 1),\n\n\t\t\ttalents: Presets.GenericAoeTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ProtectionPaladinSimUI extends IndividualSimUI<Spec.SpecProtectionPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionPaladin>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["AuraSelection","InputHelpers.makeSpecOptionsEnumInput","fieldName","label","values","name","value","PaladinAura","NoPaladinAura","DevotionAura","RetributionAura","StartingSealSelection","labelTooltip","PaladinSeal","Vengeance","Command","JudgementSelection","PaladinJudgement","JudgementOfWisdom","JudgementOfLight","UseAvengingWrath","InputHelpers.makeSpecOptionsBooleanInput","PRERAID_PRESET","PresetUtils.makePresetGear","P4_PRERAID_PRESET","P4PreraidGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","ROTATION_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","GenericAoeTalents","data","SavedTalents","create","talentsString","glyphs","major1","PaladinMajorGlyph","GlyphOfSealOfVengeance","major2","GlyphOfRighteousDefense","major3","GlyphOfDivinePlea","minor1","PaladinMinorGlyph","GlyphOfSenseUndead","minor2","GlyphOfLayOnHands","minor3","GlyphOfBlessingOfKings","DefaultOptions","ProtectionPaladinOptions","aura","judgement","DefaultConsumes","Consumes","flask","Flask","FlaskOfStoneblood","food","Food","FoodDragonfinFilet","defaultPotion","Potions","IndestructiblePotion","prepopPotion","SPEC_CONFIG","registerSpecConfig","Spec","SpecProtectionPaladin","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatMeleeHit","StatSpellHit","StatMeleeCrit","StatExpertise","StatMeleeHaste","StatArmorPenetration","StatSpellPower","StatArmor","StatBonusArmor","StatDefense","StatBlock","StatBlockValue","StatDodge","StatParry","StatResilience","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","modifyDisplayStats","player","stats","Stats","TypedEvent","freezeAllAndDo","getMajorGlyphs","includes","getSpecOptions","seal","addStat","Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","talents","defaults","gear","Presets.P3_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.GenericAoeTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","unleashedRage","leaderOfThePack","TristateEffectRegular","icyTalons","totemOfWrath","demonicPactSp","swiftRetribution","moonkinAura","sanctifiedRetribution","manaSpringTotem","bloodlust","thorns","devotionAura","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfSanctuary","blessingOfWisdom","blessingOfMight","debuffs","Debuffs","judgementOfWisdom","judgementOfLight","misery","faerieFire","ebonPlaguebringer","shadowMastery","bloodFrenzy","mangle","exposeArmor","sunderArmor","vindication","thunderClap","insectSwarm","playerIconInputs","includeBuffDebuffInputs","BuffDebuffInputs.HealthBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","ProtectionPaladinInputs.AuraSelection","ProtectionPaladinInputs.UseAvengingWrath","ProtectionPaladinInputs.JudgementSelection","ProtectionPaladinInputs.StartingSealSelection","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_DEFAULT","Presets.PRERAID_PRESET","Presets.P4_PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P4_PRESET","autoRotation","_player","rotation","simpleRotation","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","holyShieldPrepull","APLPrepullAction","fromJsonString","divinePlea","push","shieldOfRighteousness","APLAction","hammerOfRighteousness","hammerOfWrath","waitPrimary","consecration","holyShield","waitSecondary","filter","a","APLRotation","priorityList","map","action","APLListItem","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassPaladin","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceBloodElf","defaultGear","ProtectionPaladinSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}