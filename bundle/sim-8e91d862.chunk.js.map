{"version":3,"file":"sim-8e91d862.chunk.js","sources":["../../../ui/rogue/inputs.ts","../../../ui/rogue/presets.ts","../../../ui/rogue/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\nimport {\n\tRogue_Options_PoisonImbue as Poison,\n} from '../core/proto/rogue.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const MainHandImbue = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRogue, Poison>({\n\tfieldName: 'mhImbue',\n\tnumColumns: 1,\n\tvalues: [\n\t\t{ value: Poison.NoPoison, tooltip: 'No Main Hand Poison' },\n\t\t{ actionId: ActionId.fromItemId(43233), value: Poison.DeadlyPoison },\n\t\t{ actionId: ActionId.fromItemId(43231), value: Poison.InstantPoison },\n\t\t{ actionId: ActionId.fromItemId(43235), value: Poison.WoundPoison },\n\t],\n});\n\nexport const OffHandImbue = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRogue, Poison>({\n\tfieldName: 'ohImbue',\n\tnumColumns: 1,\n\tvalues: [\n\t\t{ value: Poison.NoPoison, tooltip: 'No Off Hand Poison' },\n\t\t{ actionId: ActionId.fromItemId(43233), value: Poison.DeadlyPoison },\n\t\t{ actionId: ActionId.fromItemId(43231), value: Poison.InstantPoison },\n\t\t{ actionId: ActionId.fromItemId(43235), value: Poison.WoundPoison },\n\t],\n});\n\nexport const StartingOverkillDuration = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\n\tfieldName: 'startingOverkillDuration',\n\tlabel: 'Starting Overkill duration',\n\tlabelTooltip: 'Initial Overkill buff duration at the start of each iteration.',\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().overkill || player.getTalents().masterOfSubtlety > 0\n});\n\nexport const VanishBreakTime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\n\tfieldName: 'vanishBreakTime',\n\tlabel: 'Vanish Break Time',\n\tlabelTooltip: 'Time it takes to start attacking after casting Vanish.',\n\textraCssClasses: ['experimental'],\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().overkill || player.getTalents().masterOfSubtlety > 0\n})\n\nexport const AssumeBleedActive = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecRogue>({\n\tfieldName: 'assumeBleedActive',\n\tlabel: 'Assume Bleed Always Active',\n\tlabelTooltip: 'Assume bleed always exists for \\'Hunger for Blood\\' activation. Otherwise will only calculate based on own garrote/rupture.',\n\textraCssClasses: ['within-raid-sim-hide'],\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().hungerForBlood\n})\n\nexport const HonorOfThievesCritRate = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\n\tfieldName: 'honorOfThievesCritRate',\n\tlabel: 'Honor of Thieves Crit Rate',\n\tlabelTooltip: 'Number of crits other group members generate within 100 seconds',\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().honorAmongThieves > 0\n});\n\nexport const ApplyPoisonsManually = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecRogue>({\n\tfieldName: 'applyPoisonsManually',\n\tlabel: 'Configure poisons manually',\n\tlabelTooltip: 'Prevent automatic poison configuration that is based on equipped weapons.',\n});\n","import {\n\tConjured,\n\tConsumes,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tPotions,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tRogue_Options as RogueOptions,\n\tRogue_Options_PoisonImbue as Poison,\n\tRogueMajorGlyph,\n} from '../core/proto/rogue.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nimport PreraidAssassinationGear from './gear_sets/preraid_assassination.gear.json';\nexport const PRERAID_PRESET_ASSASSINATION = PresetUtils.makePresetGear('PreRaid Assassination', PreraidAssassinationGear, { talentTree: 0 });\nimport P1AssassinationGear from './gear_sets/p1_assassination.gear.json';\nexport const P1_PRESET_ASSASSINATION = PresetUtils.makePresetGear('P1 Assassination', P1AssassinationGear, { talentTree: 0 });\nimport P2AssassinationGear from './gear_sets/p2_assassination.gear.json';\nexport const P2_PRESET_ASSASSINATION = PresetUtils.makePresetGear('P2 Assassination', P2AssassinationGear, { talentTree: 0 });\nimport P3AssassinationGear from './gear_sets/p3_assassination.gear.json';\nexport const P3_PRESET_ASSASSINATION = PresetUtils.makePresetGear('P3 Assassination', P3AssassinationGear, { talentTree: 0 });\nimport P4AssassinationGear from './gear_sets/p4_assassination.gear.json';\nexport const P4_PRESET_ASSASSINATION = PresetUtils.makePresetGear('P4 Assassination', P4AssassinationGear, { talentTree: 0 });\nimport P5AssassinationGear from './gear_sets/p5_assassination.gear.json';\nexport const P5_PRESET_ASSASSINATION = PresetUtils.makePresetGear('P5 Assassination', P5AssassinationGear, { talentTree: 0 });\nimport PreraidCombatGear from './gear_sets/preraid_combat.gear.json';\nexport const PRERAID_PRESET_COMBAT = PresetUtils.makePresetGear('PreRaid Combat', PreraidCombatGear, { talentTree: 1 });\nimport P1CombatGear from './gear_sets/p1_combat.gear.json';\nexport const P1_PRESET_COMBAT = PresetUtils.makePresetGear('P1 Combat', P1CombatGear, { talentTree: 1 });\nimport P2CombatGear from './gear_sets/p2_combat.gear.json';\nexport const P2_PRESET_COMBAT = PresetUtils.makePresetGear('P2 Combat', P2CombatGear, { talentTree: 1 });\nimport P3CombatGear from './gear_sets/p3_combat.gear.json';\nexport const P3_PRESET_COMBAT = PresetUtils.makePresetGear('P3 Combat', P3CombatGear, { talentTree: 1 });\nimport P4CombatGear from './gear_sets/p4_combat.gear.json';\nexport const P4_PRESET_COMBAT = PresetUtils.makePresetGear('P4 Combat', P4CombatGear, { talentTree: 1 });\nimport P5CombatGear from './gear_sets/p5_combat.gear.json';\nexport const P5_PRESET_COMBAT = PresetUtils.makePresetGear('P5 Combat', P5CombatGear, { talentTree: 1 });\nimport P1HemoSubGear from './gear_sets/p1_hemosub.gear.json';\nexport const P1_PRESET_HEMO_SUB = PresetUtils.makePresetGear('P1 Hemo Sub', P1HemoSubGear, { talentTree: 2 });\nimport P2HemoSubGear from './gear_sets/p2_hemosub.gear.json';\nexport const P2_PRESET_HEMO_SUB = PresetUtils.makePresetGear('P2 Hemo Sub', P2HemoSubGear, { talentTree: 2 });\nimport P3HemoSubGear from './gear_sets/p3_hemosub.gear.json';\nexport const P3_PRESET_HEMO_SUB = PresetUtils.makePresetGear('P3 Hemo Sub', P3HemoSubGear, { talentTree: 2 });\nimport P3DanceSubGear from './gear_sets/p3_dancesub.gear.json';\nexport const P3_PRESET_DANCE_SUB = PresetUtils.makePresetGear('P3 Dance Sub', P3DanceSubGear, { talentTree: 2 });\n\nimport MutilateApl from './apls/mutilate.apl.json'\nexport const ROTATION_PRESET_MUTILATE = PresetUtils.makePresetAPLRotation('Mutilate', MutilateApl, { talentTree: 0 });\nimport MutilateExposeApl from './apls/mutilate_expose.apl.json'\nexport const ROTATION_PRESET_RUPTURE_MUTILATE = PresetUtils.makePresetAPLRotation('Rupture Mutilate', RuptureMutilateApl, { talentTree: 0 });\nimport RuptureMutilateApl from './apls/rupture_mutilate.apl.json'\nexport const ROTATION_PRESET_MUTILATE_EXPOSE = PresetUtils.makePresetAPLRotation('Mutilate w/ Expose', MutilateExposeApl, { talentTree: 0 });\nimport RuptureMutilateExposeApl from './apls/rupture_mutilate_expose.apl.json'\nexport const ROTATION_PRESET_RUPTURE_MUTILATE_EXPOSE = PresetUtils.makePresetAPLRotation('Rupture Mutilate w/ Expose', RuptureMutilateExposeApl, { talentTree: 0 });\nimport CombatApl from './apls/combat.apl.json'\nexport const ROTATION_PRESET_COMBAT = PresetUtils.makePresetAPLRotation('Combat', CombatApl, { talentTree: 1 });\nimport CombatExposeApl from './apls/combat_expose.apl.json'\nexport const ROTATION_PRESET_COMBAT_EXPOSE = PresetUtils.makePresetAPLRotation('Combat w/ Expose', CombatExposeApl, { talentTree: 1 });\nimport CombatCleaveSndApl from './apls/combat_cleave_snd.apl.json'\nexport const ROTATION_PRESET_COMBAT_CLEAVE_SND = PresetUtils.makePresetAPLRotation('Combat Cleave SND', CombatCleaveSndApl, { talentTree: 1 });\nimport CombatCleaveSndExposeApl from './apls/combat_cleave_snd_expose.apl.json'\nexport const ROTATION_PRESET_COMBAT_CLEAVE_SND_EXPOSE = PresetUtils.makePresetAPLRotation('Combat Cleave SND w/ Expose', CombatCleaveSndExposeApl, { talentTree: 1 });\nimport FanAoeApl from './apls/fan_aoe.apl.json'\nexport const ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Fan AOE', FanAoeApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const CombatHackTalents = {\n\tname: 'Combat Axes/Swords',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '00532010414-0252051000035015223100501251',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfKillingSpree,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfRupture,\n\t\t})\n\t}),\n};\n\nexport const CombatCQCTalents = {\n\tname: 'Combat Fists',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '00532010414-0252051050035010223100501251',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfKillingSpree,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfRupture,\n\t\t})\n\t}),\n};\n\nexport const AssassinationTalents137 = {\n\tname: 'Assassination 13/7',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005303104352100520103331051-005005003-502',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfHungerForBlood,\n\t\t})\n\t}),\n};\n\nexport const AssassinationTalents182 = {\n\tname: 'Assassination 18/2',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005303104352100520103331051-005005005003-2',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfHungerForBlood,\n\t\t})\n\t}),\n};\n\nexport const AssassinationTalentsBF = {\n\tname: 'Assassination Blade Flurry',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '005303104352100520103231-005205005003001-501',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfBladeFlurry,\n\t\t})\n\t}),\n};\n\nexport const SubtletyTalents = {\n\tname: 'Subtlety',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '30532010114--5022012030321121350115031151',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfEviscerate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfRupture,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t})\n\t}),\n}\n\nexport const HemoSubtletyTalents = {\n\tname: 'Hemo Sub',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '30532010135--502201203032112135011503122',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfEviscerate,\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfRupture,\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\n\t\t})\n\t}),\n}\n\nexport const DefaultOptions = RogueOptions.create({\n\tmhImbue: Poison.DeadlyPoison,\n\tohImbue: Poison.InstantPoison,\n\tapplyPoisonsManually: false,\n\tstartingOverkillDuration: 20,\n\tvanishBreakTime: 0.1,\n\thonorOfThievesCritRate: 400,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tprepopPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredRogueThistleTea,\n\tflask: Flask.FlaskOfEndlessRage,\n\tfood: Food.FoodMegaMammothMeal,\n});\n","import {\n\tClass, \n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n\tWeaponType\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport {\n\tRogue_Options_PoisonImbue,\n} from '../core/proto/rogue.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\n\nimport * as RogueInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecRogue, {\n\tcssClass: 'rogue-sim-ui',\n\tcssScheme: 'rogue',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t\t'Rotations are not fully optimized, especially for non-standard setups.',\n\t],\n\twarnings: [\n\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: simUI.sim.encounter.changeEmitter,\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tlet hasNoArmor = false\n\t\t\t\t\tfor (const target of simUI.sim.encounter.targets) {\n\t\t\t\t\t\tif (new Stats(target.stats).getStat(Stat.StatArmor) <= 0) {\n\t\t\t\t\t\t\thasNoArmor = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (hasNoArmor) {\n\t\t\t\t\t\treturn 'One or more targets have no armor. Check advanced encounter settings.';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tsimUI.player.getTalents().mutilate &&\n\t\t\t\t\t\t(simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType != WeaponType.WeaponTypeDagger ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType != WeaponType.WeaponTypeDagger)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn '\"Mutilate\" talent selected, but daggers not equipped in both hands.';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tif (simUI.player.getTalents().hackAndSlash) {\n\t\t\t\t\t\tif (simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeSword ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeAxe ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeSword ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeAxe) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn '\"Hack and Slash\" talent selected, but swords or axes not equipped.';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tif (simUI.player.getTalents().closeQuartersCombat) {\n\t\t\t\t\t\tif (simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeFist ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeDagger ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeFist ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeDagger) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn '\"Close Quarters Combat\" talent selected, but fists or daggers not equipped.';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tif (simUI.player.getTalents().maceSpecialization) {\n\t\t\t\t\t\tif (simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeMace ||\n\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeMace) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn '\"Mace Specialization\" talent selected, but maces not equipped.';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\n\t\t\treturn {\n\t\t\t\tupdateOn: simUI.player.changeEmitter,\n\t\t\t\tgetContent: () => {\n\t\t\t\t\tconst mhWeaponSpeed = simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\t\tconst ohWeaponSpeed = simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\t\tconst mhImbue = simUI.player.getSpecOptions().mhImbue;\n\t\t\t\t\tconst ohImbue = simUI.player.getSpecOptions().ohImbue;\n\t\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined' || !simUI.player.getSpecOptions().applyPoisonsManually) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t\tif (mhWeaponSpeed < ohWeaponSpeed && ohImbue == Rogue_Options_PoisonImbue.DeadlyPoison) {\n\t\t\t\t\t\treturn 'Deadly poison applied to slower (off hand) weapon.';\n\t\t\t\t\t}\n\t\t\t\t\tif (ohWeaponSpeed < mhWeaponSpeed && mhImbue == Rogue_Options_PoisonImbue.DeadlyPoison) {\n\t\t\t\t\t\treturn 'Deadly poison applied to slower (main hand) weapon.';\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatExpertise,\n\t],\n\tepPseudoStats: [\n\t\tPseudoStat.PseudoStatMainHandDps,\n\t\tPseudoStat.PseudoStatOffHandDps,\n\t],\n\t// Reference stat against which to calculate EP.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatExpertise,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.PRERAID_PRESET_ASSASSINATION.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatAgility]: 1.86,\n\t\t\t[Stat.StatStrength]: 1.14,\n\t\t\t[Stat.StatAttackPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.28,\n\t\t\t[Stat.StatSpellHit]: 0.08,\n\t\t\t[Stat.StatMeleeHit]: 1.39,\n\t\t\t[Stat.StatMeleeCrit]: 1.32,\n\t\t\t[Stat.StatMeleeHaste]: 1.48,\n\t\t\t[Stat.StatArmorPenetration]: 0.84,\n\t\t\t[Stat.StatExpertise]: 0.98,\n\t\t}, {\n\t\t\t[PseudoStat.PseudoStatMainHandDps]: 2.94,\n\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.45,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.AssassinationTalents137.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tbloodlust: true,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\t\t\ticyTalons: true,\n\t\t\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\t\t\tabominationsMight: true,\n\t\t\tswiftRetribution: true,\n\t\t\telementalOath: true,\n\t\t\tsanctifiedRetribution: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\theartOfTheCrusader: true,\n\t\t\tmangle: true,\n\t\t\tsunderArmor: true,\n\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\n\t\t\tshadowMastery: true,\n\t\t\tearthAndMoon: true,\n\t\t\tbloodFrenzy: true,\n\t\t}),\n\t},\n\n\tplayerInputs: {\n\t\tinputs: [\n\t\t\tRogueInputs.ApplyPoisonsManually\n\t\t]\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tRogueInputs.MainHandImbue,\n\t\tRogueInputs.OffHandImbue,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellCritBuff,\n\t\tBuffDebuffInputs.SpellCritDebuff,\n\t\tBuffDebuffInputs.SpellHitDebuff,\n\t\tBuffDebuffInputs.SpellDamageDebuff\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tRogueInputs.StartingOverkillDuration,\n\t\t\tRogueInputs.VanishBreakTime,\n\t\t\tRogueInputs.AssumeBleedActive,\n\t\t\tRogueInputs.HonorOfThievesCritRate,\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.AssassinationTalents137,\n\t\t\tPresets.AssassinationTalents182,\n\t\t\tPresets.AssassinationTalentsBF,\n\t\t\tPresets.CombatHackTalents,\n\t\t\tPresets.CombatCQCTalents,\n\t\t\tPresets.SubtletyTalents,\n\t\t\tPresets.HemoSubtletyTalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_MUTILATE,\n\t\t\tPresets.ROTATION_PRESET_MUTILATE_EXPOSE,\n\t\t\tPresets.ROTATION_PRESET_RUPTURE_MUTILATE,\n\t\t\tPresets.ROTATION_PRESET_RUPTURE_MUTILATE_EXPOSE,\n\t\t\tPresets.ROTATION_PRESET_COMBAT,\n\t\t\tPresets.ROTATION_PRESET_COMBAT_EXPOSE,\n\t\t\tPresets.ROTATION_PRESET_COMBAT_CLEAVE_SND,\n\t\t\tPresets.ROTATION_PRESET_COMBAT_CLEAVE_SND_EXPOSE,\n\t\t\tPresets.ROTATION_PRESET_AOE,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET_ASSASSINATION,\n\t\t\tPresets.PRERAID_PRESET_COMBAT,\n\t\t\tPresets.P1_PRESET_ASSASSINATION,\n\t\t\tPresets.P1_PRESET_COMBAT,\n\t\t\tPresets.P1_PRESET_HEMO_SUB,\n\t\t\tPresets.P2_PRESET_ASSASSINATION,\n\t\t\tPresets.P2_PRESET_COMBAT,\n\t\t\tPresets.P3_PRESET_ASSASSINATION,\n\t\t\tPresets.P3_PRESET_COMBAT,\n\t\t\tPresets.P4_PRESET_ASSASSINATION,\n\t\t\tPresets.P4_PRESET_COMBAT,\n\t\t\tPresets.P5_PRESET_ASSASSINATION,\n\t\t\tPresets.P5_PRESET_COMBAT,\n\t\t\tPresets.P2_PRESET_HEMO_SUB,\n\t\t\tPresets.P3_PRESET_HEMO_SUB,\n\t\t\tPresets.P3_PRESET_DANCE_SUB,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecRogue>): APLRotation => {\n\t\tconst talentTree = player.getTalentTree();\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets >= 5) {\n\t\t\treturn Presets.ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t} else if (talentTree == 0) {\n\t\t\treturn Presets.ROTATION_PRESET_MUTILATE_EXPOSE.rotation.rotation!;\n\t\t} else if (talentTree == 1) {\n\t\t\treturn Presets.ROTATION_PRESET_COMBAT_EXPOSE.rotation.rotation!;\n\t\t} else {\n\t\t\t// TODO: Need a sub rotation here\n\t\t\treturn Presets.ROTATION_PRESET_MUTILATE_EXPOSE.rotation.rotation!;\n\t\t}\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecRogue,\n\t\t\ttooltip: 'Assassination Rogue',\n\t\t\tdefaultName: 'Assassination',\n\t\t\ticonUrl: getSpecIcon(Class.ClassRogue, 0),\n\n\t\t\ttalents: Presets.AssassinationTalents137.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET_ASSASSINATION.gear,\n\t\t\t\t\t2: Presets.P2_PRESET_ASSASSINATION.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_ASSASSINATION.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_ASSASSINATION.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET_ASSASSINATION.gear,\n\t\t\t\t\t2: Presets.P2_PRESET_ASSASSINATION.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_ASSASSINATION.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_ASSASSINATION.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecRogue,\n\t\t\ttooltip: 'Combat Rogue',\n\t\t\tdefaultName: 'Combat',\n\t\t\ticonUrl: getSpecIcon(Class.ClassRogue, 1),\n\n\t\t\ttalents: Presets.CombatCQCTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET_COMBAT.gear,\n\t\t\t\t\t2: Presets.P2_PRESET_COMBAT.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_COMBAT.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_COMBAT.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET_COMBAT.gear,\n\t\t\t\t\t2: Presets.P2_PRESET_COMBAT.gear,\n\t\t\t\t\t3: Presets.P3_PRESET_COMBAT.gear,\n\t\t\t\t\t4: Presets.P4_PRESET_COMBAT.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class RogueSimUI extends IndividualSimUI<Spec.SpecRogue> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRogue>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t\tthis.player.changeEmitter.on((c) => {\n\t\t\tconst options = this.player.getSpecOptions()\n\t\t\tconst encounter = this.sim.encounter\n\t\t\tif (!options.applyPoisonsManually) {\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (encounter.targets.length > 3) {\n\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t} else {\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) {\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.DeadlyPoison\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.DeadlyPoison\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setSpecOptions(c, options)\n\t\t});\n\t\tthis.sim.encounter.changeEmitter.on((c) => {\n\t\t\tconst options = this.player.getSpecOptions()\n\t\t\tconst encounter = this.sim.encounter\n\t\t\tif (!options.applyPoisonsManually) {\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (encounter.targets.length > 3) {\n\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t} else {\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) {\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.DeadlyPoison\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.DeadlyPoison\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.player.setSpecOptions(c, options)\n\t\t});\n\t}\n}\n"],"names":["MainHandImbue","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","numColumns","values","value","Poison","NoPoison","tooltip","actionId","ActionId","fromItemId","DeadlyPoison","InstantPoison","WoundPoison","OffHandImbue","StartingOverkillDuration","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","showWhen","player","getTalents","overkill","masterOfSubtlety","VanishBreakTime","extraCssClasses","AssumeBleedActive","InputHelpers.makeSpecOptionsBooleanInput","hungerForBlood","HonorOfThievesCritRate","honorAmongThieves","ApplyPoisonsManually","PRERAID_PRESET_ASSASSINATION","PresetUtils.makePresetGear","talentTree","P1_PRESET_ASSASSINATION","P1AssassinationGear","P2_PRESET_ASSASSINATION","P2AssassinationGear","P3_PRESET_ASSASSINATION","P3AssassinationGear","P4_PRESET_ASSASSINATION","P4AssassinationGear","P5_PRESET_ASSASSINATION","P5AssassinationGear","PRERAID_PRESET_COMBAT","PreraidCombatGear","P1_PRESET_COMBAT","P1CombatGear","P2_PRESET_COMBAT","P2CombatGear","P3_PRESET_COMBAT","P3CombatGear","P4_PRESET_COMBAT","P4CombatGear","P5_PRESET_COMBAT","P5CombatGear","P1_PRESET_HEMO_SUB","P1HemoSubGear","P2_PRESET_HEMO_SUB","P2HemoSubGear","P3_PRESET_HEMO_SUB","P3HemoSubGear","P3_PRESET_DANCE_SUB","P3DanceSubGear","ROTATION_PRESET_MUTILATE","PresetUtils.makePresetAPLRotation","MutilateApl","ROTATION_PRESET_RUPTURE_MUTILATE","RuptureMutilateApl","ROTATION_PRESET_MUTILATE_EXPOSE","MutilateExposeApl","ROTATION_PRESET_RUPTURE_MUTILATE_EXPOSE","RuptureMutilateExposeApl","ROTATION_PRESET_COMBAT","CombatApl","ROTATION_PRESET_COMBAT_EXPOSE","CombatExposeApl","ROTATION_PRESET_COMBAT_CLEAVE_SND","CombatCleaveSndApl","ROTATION_PRESET_COMBAT_CLEAVE_SND_EXPOSE","CombatCleaveSndExposeApl","ROTATION_PRESET_AOE","FanAoeApl","CombatHackTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","RogueMajorGlyph","GlyphOfKillingSpree","major2","GlyphOfTricksOfTheTrade","major3","GlyphOfRupture","CombatCQCTalents","AssassinationTalents137","GlyphOfMutilate","GlyphOfHungerForBlood","AssassinationTalents182","AssassinationTalentsBF","GlyphOfBladeFlurry","SubtletyTalents","GlyphOfEviscerate","HemoSubtletyTalents","DefaultOptions","RogueOptions","mhImbue","ohImbue","applyPoisonsManually","startingOverkillDuration","vanishBreakTime","honorOfThievesCritRate","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","prepopPotion","defaultConjured","Conjured","ConjuredRogueThistleTea","flask","Flask","FlaskOfEndlessRage","food","Food","FoodMegaMammothMeal","SPEC_CONFIG","registerSpecConfig","Spec","SpecRogue","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","sim","encounter","changeEmitter","getContent","hasNoArmor","target","targets","Stats","stats","getStat","Stat","StatArmor","mutilate","getGear","getEquippedItem","ItemSlot","ItemSlotMainHand","item","weaponType","WeaponType","WeaponTypeDagger","ItemSlotOffHand","hackAndSlash","WeaponTypeSword","WeaponTypeAxe","closeQuartersCombat","WeaponTypeFist","maceSpecialization","WeaponTypeMace","mhWeaponSpeed","weaponSpeed","ohWeaponSpeed","getSpecOptions","Rogue_Options_PoisonImbue","epStats","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatSpellHit","StatSpellCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","gear","Presets.PRERAID_PRESET_ASSASSINATION","epWeights","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.AssassinationTalents137","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","strengthOfEarthTotem","icyTalons","leaderOfThePack","abominationsMight","swiftRetribution","elementalOath","sanctifiedRetribution","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","heartOfTheCrusader","mangle","sunderArmor","faerieFire","shadowMastery","earthAndMoon","bloodFrenzy","playerInputs","inputs","RogueInputs.ApplyPoisonsManually","playerIconInputs","RogueInputs.MainHandImbue","RogueInputs.OffHandImbue","includeBuffDebuffInputs","BuffDebuffInputs.SpellCritBuff","BuffDebuffInputs.SpellCritDebuff","BuffDebuffInputs.SpellHitDebuff","BuffDebuffInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","RogueInputs.StartingOverkillDuration","RogueInputs.VanishBreakTime","RogueInputs.AssumeBleedActive","RogueInputs.HonorOfThievesCritRate","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.AssassinationTalents182","Presets.AssassinationTalentsBF","Presets.CombatHackTalents","Presets.CombatCQCTalents","Presets.SubtletyTalents","Presets.HemoSubtletyTalents","rotations","Presets.ROTATION_PRESET_MUTILATE","Presets.ROTATION_PRESET_MUTILATE_EXPOSE","Presets.ROTATION_PRESET_RUPTURE_MUTILATE","Presets.ROTATION_PRESET_RUPTURE_MUTILATE_EXPOSE","Presets.ROTATION_PRESET_COMBAT","Presets.ROTATION_PRESET_COMBAT_EXPOSE","Presets.ROTATION_PRESET_COMBAT_CLEAVE_SND","Presets.ROTATION_PRESET_COMBAT_CLEAVE_SND_EXPOSE","Presets.ROTATION_PRESET_AOE","Presets.PRERAID_PRESET_COMBAT","Presets.P1_PRESET_ASSASSINATION","Presets.P1_PRESET_COMBAT","Presets.P1_PRESET_HEMO_SUB","Presets.P2_PRESET_ASSASSINATION","Presets.P2_PRESET_COMBAT","Presets.P3_PRESET_ASSASSINATION","Presets.P3_PRESET_COMBAT","Presets.P4_PRESET_ASSASSINATION","Presets.P4_PRESET_COMBAT","Presets.P5_PRESET_ASSASSINATION","Presets.P5_PRESET_COMBAT","Presets.P2_PRESET_HEMO_SUB","Presets.P3_PRESET_HEMO_SUB","Presets.P3_PRESET_DANCE_SUB","autoRotation","getTalentTree","length","rotation","raidSimPresets","spec","defaultName","iconUrl","getSpecIcon","Class","ClassRogue","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","RogueSimUI","IndividualSimUI","constructor","parentElem","super","this","on","c","options","setSpecOptions"],"mappings":"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"}