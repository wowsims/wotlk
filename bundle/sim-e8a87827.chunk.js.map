{"version":3,"file":"sim-e8a87827.chunk.js","sources":["../../../ui/shadow_priest/inputs.ts","../../../ui/shadow_priest/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport {\n\tShadowPriest_Options_Armor as Armor,\n} from '../core/proto/priest.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecShadowPriest, Armor>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: Armor.NoArmor, tooltip: 'No Inner Fire' },\n\t\t{ actionId: ActionId.fromSpellId(48168), value: Armor.InnerFire },\n\t],\n});\n","import {\n\tClass,\n\tFaction,\n\tPartyBuffs,\n\tRace,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\n\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n\nimport * as ShadowPriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecShadowPriest, {\n\tcssClass: 'shadow-priest-sim-ui',\n\tcssScheme: 'priest',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecShadowPriest>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.P4_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.11,\n\t\t\t[Stat.StatSpirit]: 0.47,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.87,\n\t\t\t[Stat.StatSpellCrit]: 0.74,\n\t\t\t[Stat.StatSpellHaste]: 1.65,\n\t\t\t[Stat.StatMP5]: 0.00,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tShadowPriestInputs.ArmorInput,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.ReplenishmentBuff,\n\t\tBuffDebuffInputs.MeleeHasteBuff,\n\t\tBuffDebuffInputs.MeleeCritBuff,\n\t\tBuffDebuffInputs.MP5Buff,\n\t\tBuffDebuffInputs.AttackPowerPercentBuff,\n\t\tBuffDebuffInputs.AttackPowerBuff,\n\t\tBuffDebuffInputs.StaminaBuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.ChannelClipDelay,\n\t\t\tOtherInputs.nibelungAverageCasts,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t\tPresets.EnlightenmentTalents,\n\t\t],\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.ROTATION_PRESET_AOE24,\n\t\t\tPresets.ROTATION_PRESET_AOE4PLUS,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.PRERAID_PRESET,\n\t\t\tPresets.P1_PRESET,\n\t\t\tPresets.P2_PRESET,\n\t\t\tPresets.P3_PRESET,\n\t\t\tPresets.P4_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecShadowPriest>): APLRotation => {\n\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\tif (numTargets > 4) {\n\t\t\treturn Presets.ROTATION_PRESET_AOE4PLUS.rotation.rotation!;\n\t\t} else if (numTargets > 1) {\n\t\t\treturn Presets.ROTATION_PRESET_AOE24.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecShadowPriest,\n\t\t\ttooltip: specNames[Spec.SpecShadowPriest],\n\t\t\tdefaultName: 'Shadow',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPriest, 2),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.P1_PRESET.gear,\n\t\t\t\t\t2: Presets.P2_PRESET.gear,\n\t\t\t\t\t3: Presets.P3_PRESET.gear,\n\t\t\t\t\t4: Presets.P4_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ShadowPriestSimUI extends IndividualSimUI<Spec.SpecShadowPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecShadowPriest>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","Armor","NoArmor","tooltip","actionId","ActionId","fromSpellId","InnerFire","SPEC_CONFIG","registerSpecConfig","Spec","SpecShadowPriest","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","player","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","gear","Presets.P4_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.StandardTalents","data","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","create","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","ShadowPriestInputs.ArmorInput","includeBuffDebuffInputs","BuffDebuffInputs.ReplenishmentBuff","BuffDebuffInputs.MeleeHasteBuff","BuffDebuffInputs.MeleeCritBuff","BuffDebuffInputs.MP5Buff","BuffDebuffInputs.AttackPowerPercentBuff","BuffDebuffInputs.AttackPowerBuff","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","OtherInputs.nibelungAverageCasts","encounterPicker","showExecuteProportion","presets","Presets.EnlightenmentTalents","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.ROTATION_PRESET_AOE24","Presets.ROTATION_PRESET_AOE4PLUS","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","autoRotation","numTargets","sim","encounter","targets","length","rotation","raidSimPresets","spec","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassPriest","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceDwarf","Horde","RaceUndead","defaultGear","ShadowPriestSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"+aAWa,MAAAA,EAAaC,EAAwE,CACjGC,UAAW,QACXC,OAAQ,CACP,CAAEC,MAAOC,EAAMC,QAASC,QAAS,iBACjC,CAAEC,SAAUC,EAASC,YAAY,OAAQN,MAAOC,EAAMM,cCSlDC,EAAcC,EAAmBC,EAAKC,iBAAkB,CAC7DC,SAAU,uBACVC,UAAW,SAEXC,YAAa,GAIbC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAGNC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKW,SACLX,EAAKY,YACLZ,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAENM,mBAAqBC,IAChB,IAAAC,EAAQ,IAAIC,EAGT,OAFCD,EAAAA,EAAME,QAAQjB,EAAKI,aAAgD,EAAlCU,EAAOI,aAAaC,YAAkBC,GAExE,CACNC,QAASN,EAAA,EAIXO,SAAU,CAETC,KAAMC,EAAkBD,KAExBE,UAAWT,EAAMU,QAAQ,CACxB,CAAC1B,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,IACrB,CAACJ,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,KACvB,CAACN,EAAKO,SAAU,IAGjBoB,SAAUC,EAEVP,QAASQ,EAAwBC,KAEjCC,YAAaC,EAEbC,UAAWC,EAEXC,WAAYC,EAAWC,OAAO,IAE9BC,gBAAiBC,EAEjBC,QAASC,EAETC,MAAOC,GAIRC,iBAAkB,CACjBC,GAGDC,wBAAyB,CACxBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEDC,wBAAyB,GAGzBC,YAAa,CACZC,OAAQ,CACPC,EACAC,EACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERzC,QAAS,CACRQ,EACAkC,GAEDC,UAAW,CACVC,EACAC,EACAC,GAGD5C,KAAM,CACL6C,EACAC,EACAC,EACAC,EACA/C,IAIFgD,aAAe1D,IACd,MAAM2D,EAAa3D,EAAO4D,IAAIC,UAAUC,QAAQC,OAChD,OAAIJ,EAAa,EACTN,EAAiCW,SAASA,SACvCL,EAAa,EAChBP,EAA8BY,SAASA,SAEvCb,EAAgCa,SAASA,QACjD,EAGDC,eAAgB,CACf,CACCC,KAAMtF,EAAKC,iBACXR,QAAS8F,EAAUvF,EAAKC,kBACxBuF,YAAa,SACbC,QAASC,EAAYC,EAAMC,YAAa,GAExCjE,QAASQ,EAAwBC,KACjCC,YAAaC,EACbL,SAAUC,EACV2D,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKG,UACzB,CAACL,EAAQM,OAAQJ,EAAKK,YAEvBC,YAAa,CACZ,CAACR,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGvB,EAAkB9C,KACrB,EAAG+C,EAAkB/C,KACrB,EAAGgD,EAAkBhD,KACrB,EAAGC,EAAkBD,MAEtB,CAACiE,EAAQM,OAAQ,CAChB,EAAGzB,EAAkB9C,KACrB,EAAG+C,EAAkB/C,KACrB,EAAGgD,EAAkBhD,KACrB,EAAGC,EAAkBD,WAOnB,MAAM0E,UAA0BC,EACtC,WAAAC,CAAYC,EAAyBtF,GAC9BuF,MAAAD,EAAYtF,EAAQtB,EAC3B"}