syntax = "proto3";
package proto;

option go_package = "./proto";

import "common.proto";

message WarriorTalents {
	// Arms
	int32 improved_heroic_strike = 1;
	int32 deflection = 2;
	int32 improved_rend = 3;
	int32 improved_charge = 4;
	int32 iron_will = 5;
	int32 tactical_mastery = 6;
	int32 improved_overpower = 7;
	bool anger_management = 8;
	int32 impale = 9;
	int32 deep_wounds = 10;
	int32 two_handed_weapon_specialization = 11;
	int32 taste_for_blood = 12;
	int32 poleaxe_specialization = 13;
	bool sweeping_strikes = 14;
	int32 mace_specialization = 15;
	int32 sword_specialization = 16;
	int32 weapon_mastery = 17;
	int32 improved_hamstring = 18;
	int32 trauma = 19;
	int32 second_wind = 20;
	bool mortal_strike = 21;
	int32 strength_of_arms = 22;
	int32 improved_slam = 23;
	bool juggernaut = 24;
	int32 improved_mortal_strike = 25;
	int32 unrelenting_assault = 26;
	int32 sudden_death = 27;
	bool endless_rage = 28;
	int32 blood_frenzy = 29;
	int32 wrecking_crew = 30;
	bool bladestorm = 31;

	// Fury
	int32 armored_to_the_teeth = 32;
	int32 booming_voice = 33;
	int32 cruelty = 34;
	int32 improved_demoralizing_shout = 35;
	int32 unbridled_wrath = 36;
	int32 improved_cleave = 37;
	bool piercing_howl = 38;
	int32 blood_craze = 39;
	int32 commanding_presence = 40;
	int32 dual_wield_specialization = 41;
	int32 improved_execute = 42;
	int32 enrage = 43;
	int32 precision = 44;
	bool death_wish = 45;
	int32 improved_intercept = 46;
	int32 improved_berserker_rage = 47;
	int32 flurry = 48;
	int32 intensify_rage = 49;
	bool bloodthirst = 50;
	int32 improved_whirlwind = 51;
	int32 furious_attacks = 52;
	int32 improved_berserker_stance = 53;
	bool heroic_fury = 54;
	bool rampage = 55;
	int32 bloodsurge = 56;
	int32 unending_fury = 57;
	bool titans_grip = 58;

	// Protection
	int32 improved_bloodrage = 59;
	int32 shield_specialization = 60;
	int32 improved_thunder_clap = 61;
	int32 incite = 62;
	int32 anticipation = 63;
	bool last_stand = 64;
	int32 improved_revenge = 65;
	int32 shield_mastery = 66;
	int32 toughness = 67;
	int32 improved_spell_reflection = 68;
	int32 improved_disarm = 69;
	int32 puncture = 70;
	int32 improved_disciplines = 71;
	bool concussion_blow = 72;
	int32 gag_order = 73;
	int32 one_handed_weapon_specialization = 74;
	int32 improved_defensive_stance = 75;
	bool vigilance = 76;
	int32 focused_rage = 77;
	int32 vitality = 78;
	int32 safeguard = 79;
	bool warbringer = 80;
	bool devastate = 81;
	int32 critical_block = 82;
	int32 sword_and_board = 83;
	int32 damage_shield = 84;
	bool shockwave = 85;
}

enum WarriorMajorGlyph {
	WarriorMajorGlyphNone = 0;
	GlyphOfBarbaricInsults = 43420;
	GlyphOfBladestorm = 45790;
	GlyphOfBlocking = 43425;
	GlyphOfBloodthirst = 43412;
	GlyphOfCleaving = 43414;
	GlyphOfDevastate = 43415;
	GlyphOfEnragedRegeneration = 45794;
	GlyphOfExecution = 43416;
	GlyphOfHamstring = 43417;
	GlyphOfHeroicStrike = 43418;
	GlyphOfIntervene = 43419;
	GlyphOfLastStand = 43426;
	GlyphOfMortalStrike = 43421;
	GlyphOfOverpower = 43422;
	GlyphOfRapidCharge = 43413;
	GlyphOfRending = 43423;
	GlyphOfResonatingPower = 43430;
	GlyphOfRevenge = 43424;
	GlyphOfShieldWall = 45797;
	GlyphOfShockwave = 45792;
	GlyphOfSpellReflection = 45795;
	GlyphOfSunderArmor = 43427;
	GlyphOfSweepingStrikes = 43428;
	GlyphOfTaunt = 43429;
	GlyphOfVictoryRush = 43431;
	GlyphOfVigilance = 45793;
	GlyphOfWhirlwind = 43432;
}
enum WarriorMinorGlyph {
	WarriorMinorGlyphNone = 0;
	GlyphOfBattle = 43395;
	GlyphOfBloodrage = 43396;
	GlyphOfCharge = 43397;
	GlyphOfCommand = 49084;
	GlyphOfEnduringVictory = 43400;
	GlyphOfMockingBlow = 43398;
	GlyphOfThunderClap = 43399;
	GlyphOfShatteringThrow = 206953;
}

enum WarriorShout {
	WarriorShoutNone = 0;
	WarriorShoutBattle = 1;
	WarriorShoutCommanding = 2;
}

message Warrior {
	message Rotation {
		bool use_cleave = 1;
		bool use_rend = 2;
		bool use_ms = 18;
		bool use_slam = 3;

		enum MainGcd {
			None = 0;
			Slam = 1;
			Bloodthirst = 2;
			Whirlwind = 3;
		}
		MainGcd main_gcd = 4;

		enum SunderArmor {
			SunderArmorNone = 0;
			SunderArmorHelpStack = 1;
			SunderArmorMaintain = 2;
		}
		SunderArmor sunderArmor = 5;
		bool maintain_demo_shout = 6;
		bool maintain_thunder_clap = 7;

		// Queue HS or Cleave when over this threshold.
		double hs_rage_threshold = 8;

		// Use Mortal Strike when over this threshold.
		double ms_rage_threshold = 9;

		// Use Rend when below this threshold.
		double rend_rage_threshold_below = 10;

		// Use Slam when over this threshold.
		double slam_rage_threshold = 11;

		// Refresh Rend when remaining duration is less than this threshold.
		double rend_cd_threshold = 12;

		bool use_hs_during_execute = 13;
		bool use_bt_during_execute = 14;
		bool spam_execute = 15;
		bool use_ww_during_execute = 16;
		bool use_slam_over_execute = 17;

		enum StanceOption {
			DefaultStance = 0;
			BattleStance = 1;
			BerserkerStance = 2;
		}
		StanceOption stance_option = 19;
		double rend_health_threshold_above = 20;

		// Only used for Fury
		bool use_overpower = 21;
		bool execute_phase_overpower = 22;
		double bloodsurge_duration_threshold = 25;

		enum SpellOption {
			NoSpell = 0;
			BloodthirstCustom = 1;
			MortalStrike = 2;
			WhirlwindCustom = 3;
			SlamCustom = 4;
			Rend = 5;
			Overpower = 6;
			Execute = 7;
			ThunderClap = 8;
			SlamExpiring = 9;
		}
		CustomRotation custom_rotation = 23;
		bool custom_rotation_option = 24;
	}
	Rotation rotation = 1;

	message Options {
		double starting_rage = 1;
		bool use_recklessness = 2;
		bool use_shattering_throw = 4;
		WarriorShout shout = 3;
		bool munch = 5;
		bool stance_snapshot = 6;
	}
	Options options = 3;
}

message ProtectionWarrior {
	message Rotation {
		enum DemoShoutChoice {
			DemoShoutChoiceNone = 0;
			DemoShoutChoiceMaintain = 1;
			DemoShoutChoiceFiller = 2;
		}
		DemoShoutChoice demo_shout_choice = 1;

		enum ThunderClapChoice {
			ThunderClapChoiceNone = 0;
			ThunderClapChoiceMaintain = 1;
			ThunderClapChoiceOnCD = 2;
		}
		ThunderClapChoice thunder_clap_choice = 2;

		enum SpellOption {
			NoSpell = 0;
			Revenge = 1;
			ShieldSlam = 2;
			Devastate = 3;
			SunderArmor = 4;
			Shout = 5;
			DemoralizingShout = 6;
			ThunderClap = 7;
			MortalStrike = 8;
			ConcussionBlow = 9;
			Shockwave = 10;
		}
		CustomRotation custom_rotation = 3;

		double hs_rage_threshold = 4;
		bool prio_sslam_on_shield_block = 5;
	}
	Rotation rotation = 1;

	message Options {
		double starting_rage = 1;

		WarriorShout shout = 4;
		bool use_shattering_throw = 8;
		bool munch = 9;
	}
	Options options = 3;
}
